{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt, searchListings } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var route = useRoute();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState({\n    locationName: \"New York\",\n    locationId: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchByLocation = _useState4[0],\n      setSearchByLocation = _useState4[1];\n\n  var _useState5 = useState({\n    catName: \"All\",\n    catId: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchByCategory = _useState6[0],\n      setSearchByCategory = _useState6[1];\n\n  useEffect(function () {\n    if (!route.params) {\n      console.log(\"Params not set\");\n    } else if (route.params.locID !== undefined) {\n      setSearchByLocation({\n        locationName: route.params.locName,\n        locationId: route.params.locID\n      });\n    } else if (route.params.catID !== undefined) {\n      setSearchByCategory({\n        catName: route.params.catName,\n        catId: route.params.catID\n      });\n    }\n  }, [route.params]);\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newItems = _useState8[0],\n      setNewItems = _useState8[1];\n\n  var fetchAll = function fetchAll() {\n    var itemListByCommonID;\n    return _regeneratorRuntime.async(function fetchAll$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: getListingByCreatedAt,\n              variables: {\n                commonID: \"1\",\n                sortDirection: \"DESC\"\n              },\n              authMode: \"AWS_IAM\"\n            }));\n\n          case 3:\n            itemListByCommonID = _context.sent;\n            setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    fetchAll();\n  }, []);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      menuToggle = _useState10[0],\n      setMenuToggle = _useState10[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeaderForMobile, {\n      setSearchText: setSearchText,\n      searchByCategory: searchByCategory,\n      searchByLocation: searchByLocation\n    }), _jsx(HeaderForDesktop, {\n      setMenuToggle: setMenuToggle,\n      menuToggle: menuToggle\n    }), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        position: \"relative\"\n      },\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          width: windowWidth > 800 ? \"80%\" : \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            display: windowWidth > 800 ? \"flex\" : \"none\",\n            flexBasis: \"20%\"\n          },\n          children: _jsx(CategoryForDesktop, {})\n        }), _jsx(FlatList, {\n          style: {\n            flexBasis: \"80%\",\n            marginTop: 10\n          },\n          data: newItems,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(PostItems, {\n              post: item\n            });\n          }\n        })]\n      }), _jsx(MenuDetailsForDesktop, {\n        menuToggle: menuToggle,\n        top: -20,\n        right: \"9.2%\"\n      })]\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/Home/index.js"],"names":["React","useEffect","useState","StatusBar","PostItems","HeaderForMobile","colors","API","getListingByCreatedAt","searchListings","HeaderForDesktop","CategoryForDesktop","MenuDetailsForDesktop","useRoute","Home","route","searchText","setSearchText","locationName","locationId","searchByLocation","setSearchByLocation","catName","catId","searchByCategory","setSearchByCategory","params","console","log","locID","undefined","locName","catID","windowWidth","Number","Dimensions","get","width","newItems","setNewItems","fetchAll","graphql","query","variables","commonID","sortDirection","authMode","itemListByCommonID","data","items","menuToggle","setMenuToggle","flex","alignItems","position","flexDirection","justifyContent","display","flexBasis","marginTop","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;;AAUA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,SAASC,MAAT;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,qBAAT,EAAgCC,cAAhC;AACA,OAAOC,gBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,qBAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;;;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,KAAK,GAAGF,QAAQ,EAAtB;;AACA,kBAAoCX,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgDf,QAAQ,CAAC;AACvDgB,IAAAA,YAAY,EAAE,UADyC;AAEvDC,IAAAA,UAAU,EAAE;AAF2C,GAAD,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAIA,mBAAgDnB,QAAQ,CAAC;AACvDoB,IAAAA,OAAO,EAAE,KAD8C;AAEvDC,IAAAA,KAAK,EAAE;AAFgD,GAAD,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAUAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACc,KAAK,CAACW,MAAX,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAFD,MAEO,IAAIb,KAAK,CAACW,MAAN,CAAaG,KAAb,KAAuBC,SAA3B,EAAsC;AAC3CT,MAAAA,mBAAmB,CAAC;AAClBH,QAAAA,YAAY,EAAEH,KAAK,CAACW,MAAN,CAAaK,OADT;AAElBZ,QAAAA,UAAU,EAAEJ,KAAK,CAACW,MAAN,CAAaG;AAFP,OAAD,CAAnB;AAID,KALM,MAKA,IAAId,KAAK,CAACW,MAAN,CAAaM,KAAb,KAAuBF,SAA3B,EAAsC;AAC3CL,MAAAA,mBAAmB,CAAC;AAClBH,QAAAA,OAAO,EAAEP,KAAK,CAACW,MAAN,CAAaJ,OADJ;AAElBC,QAAAA,KAAK,EAAER,KAAK,CAACW,MAAN,CAAaM;AAFF,OAAD,CAAnB;AAID;AACF,GAdQ,EAcN,CAACjB,KAAK,CAACW,MAAP,CAdM,CAAT;AAeA,MAAMO,WAAW,GAAGC,MAAM,CAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA1B,CAA1B;;AACA,mBAAgCnC,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOoC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBjC,GAAG,CAACkC,OAAJ,CAAY;AAC3CC,cAAAA,KAAK,EAAElC,qBADoC;AAE3CmC,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,GAAZ;AAAiBC,gBAAAA,aAAa,EAAE;AAAhC,eAFgC;AAG3CC,cAAAA,QAAQ,EAAE;AAHiC,aAAZ,CAFpB;;AAAA;AAEPC,YAAAA,kBAFO;AAQbR,YAAAA,WAAW,CAACQ,kBAAkB,CAACC,IAAnB,CAAwBxC,qBAAxB,CAA8CyC,KAA/C,CAAX;AARa;AAAA;;AAAA;AAAA;AAAA;AAUbtB,YAAAA,OAAO,CAACC,GAAR;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAaA3B,EAAAA,SAAS,CAAC,YAAM;AACduC,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAGA,mBAAoCtC,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOgD,UAAP;AAAA,MAAmBC,aAAnB;;AACA,SACE;AAAA,eACE,KAAC,eAAD;AACE,MAAA,aAAa,EAAElC,aADjB;AAEE,MAAA,gBAAgB,EAAEO,gBAFpB;AAGE,MAAA,gBAAgB,EAAEJ;AAHpB,MADF,EAME,KAAC,gBAAD;AAAkB,MAAA,aAAa,EAAE+B,aAAjC;AAAgD,MAAA,UAAU,EAAED;AAA5D,MANF,EAOE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE,QAAvB;AAAiCC,QAAAA,QAAQ,EAAE;AAA3C,OAAb;AAAA,iBACE,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAE,CADD;AAELf,UAAAA,KAAK,EAAEJ,WAAW,GAAG,GAAd,GAAoB,KAApB,GAA4B,MAF9B;AAGLsB,UAAAA,aAAa,EAAE,KAHV;AAILC,UAAAA,cAAc,EAAE;AAJX,SADT;AAAA,mBAOE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAExB,WAAW,GAAG,GAAd,GAAoB,MAApB,GAA6B,MADjC;AAELyB,YAAAA,SAAS,EAAE;AAFN,WADT;AAAA,oBAKE,KAAC,kBAAD;AALF,UAPF,EAcE,KAAC,QAAD;AACE,UAAA,KAAK,EAAE;AAAEA,YAAAA,SAAS,EAAE,KAAb;AAAoBC,YAAAA,SAAS,EAAE;AAA/B,WADT;AAEE,UAAA,IAAI,EAAErB,QAFR;AAGE,UAAA,UAAU,EAAE;AAAA,gBAAGsB,IAAH,QAAGA,IAAH;AAAA,mBAAc,KAAC,SAAD;AAAW,cAAA,IAAI,EAAEA;AAAjB,cAAd;AAAA;AAHd,UAdF;AAAA,QADF,EAqBE,KAAC,qBAAD;AACE,QAAA,UAAU,EAAEV,UADd;AAEE,QAAA,GAAG,EAAE,CAAC,EAFR;AAGE,QAAA,KAAK,EAAE;AAHT,QArBF;AAAA,MAPF;AAAA,IADF;AAqCD,CAzFD;;AA2FA,eAAepC,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  FlatList,\n  View,\n  Text,\n  Dimensions,\n} from \"react-native\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt, searchListings } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { useRoute } from \"@react-navigation/native\";\nconst Home = () => {\n  const route = useRoute();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchByLocation, setSearchByLocation] = useState({\n    locationName: \"New York\",\n    locationId: \"\",\n  });\n  const [searchByCategory, setSearchByCategory] = useState({\n    catName: \"All\",\n    catId: \"\",\n  });\n\n  // useEffect(() => {\n  //   if (searchText !== \"\") {\n  //     alert(searchText);\n  //   }\n  // }, [searchText]);\n  useEffect(() => {\n    if (!route.params) {\n      console.log(\"Params not set\");\n    } else if (route.params.locID !== undefined) {\n      setSearchByLocation({\n        locationName: route.params.locName,\n        locationId: route.params.locID,\n      });\n    } else if (route.params.catID !== undefined) {\n      setSearchByCategory({\n        catName: route.params.catName,\n        catId: route.params.catID,\n      });\n    }\n  }, [route.params]);\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  const [newItems, setNewItems] = useState([]);\n\n  const fetchAll = async () => {\n    try {\n      const itemListByCommonID = await API.graphql({\n        query: getListingByCreatedAt,\n        variables: { commonID: \"1\", sortDirection: \"DESC\" },\n        authMode: \"AWS_IAM\",\n      });\n\n      setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchAll();\n  }, []);\n  const [menuToggle, setMenuToggle] = useState(false);\n  return (\n    <>\n      <HeaderForMobile\n        setSearchText={setSearchText}\n        searchByCategory={searchByCategory}\n        searchByLocation={searchByLocation}\n      />\n      <HeaderForDesktop setMenuToggle={setMenuToggle} menuToggle={menuToggle} />\n      <View style={{ flex: 1, alignItems: \"center\", position: \"relative\" }}>\n        <View\n          style={{\n            flex: 1,\n            width: windowWidth > 800 ? \"80%\" : \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n          }}>\n          <View\n            style={{\n              display: windowWidth > 800 ? \"flex\" : \"none\",\n              flexBasis: \"20%\",\n            }}>\n            <CategoryForDesktop />\n          </View>\n          <FlatList\n            style={{ flexBasis: \"80%\", marginTop: 10 }}\n            data={newItems}\n            renderItem={({ item }) => <PostItems post={item} />}\n          />\n        </View>\n        <MenuDetailsForDesktop\n          menuToggle={menuToggle}\n          top={-20}\n          right={\"9.2%\"}\n        />\n      </View>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}