{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Auth, API } from \"aws-amplify\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { listRentOrders } from \"../../graphql/queries\";\nimport BorrowerHeadScreen from \"../../components/BorrowerHead\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LenderScreen = function LenderScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      newItems = _useState2[0],\n      setNewItems = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userID = _useState4[0],\n      setUserID = _useState4[1];\n\n  Auth.currentAuthenticatedUser().then(function (user) {\n    setUserID(user.attributes.sub);\n  }).catch(function (err) {\n    console.log(err);\n    throw err;\n  });\n\n  var fetchAll = function fetchAll() {\n    var orderList;\n    return _regeneratorRuntime.async(function fetchAll$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: listRentOrders,\n              variables: {\n                filter: {\n                  lenderUserID: {\n                    eq: userID\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            orderList = _context.sent;\n            setNewItems(orderList.data.listRentOrders.items);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  fetchAll();\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: newItems,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(LenderHeadScreen, {\n          BorrowerHead: item\n        });\n      }\n    })\n  });\n};\n\nexport default LenderScreen;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/Lender/index.js"],"names":["React","useState","useEffect","Auth","API","listRentOrders","BorrowerHeadScreen","LenderScreen","newItems","setNewItems","userID","setUserID","currentAuthenticatedUser","then","user","attributes","sub","catch","err","console","log","fetchAll","graphql","query","variables","filter","lenderUserID","eq","orderList","data","items","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,aAA1B;;;;AAEA,SAASC,cAAT;AACA,OAAOC,kBAAP;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4BR,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOS,MAAP;AAAA,MAAeC,SAAf;;AACAR,EAAAA,IAAI,CAACS,wBAAL,GACGC,IADH,CACQ,UAACC,IAAD,EAAU;AAEdH,IAAAA,SAAS,CAACG,IAAI,CAACC,UAAL,CAAgBC,GAAjB,CAAT;AACD,GAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMA,GAAN;AACD,GARH;;AASA,MAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWjB,GAAG,CAACkB,OAAJ,CAAY;AAClCC,cAAAA,KAAK,EAAElB,cAD2B;AAElCmB,cAAAA,SAAS,EAAE;AACTC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,YAAY,EAAE;AAAEC,oBAAAA,EAAE,EAAEjB;AAAN;AADR;AADC;AAFuB,aAAZ,CAFX;;AAAA;AAEPkB,YAAAA,SAFO;AAWbnB,YAAAA,WAAW,CAACmB,SAAS,CAACC,IAAV,CAAexB,cAAf,CAA8ByB,KAA/B,CAAX;AAXa;AAAA;;AAAA;AAAA;AAAA;AAcbX,YAAAA,OAAO,CAACC,GAAR;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAkBAC,EAAAA,QAAQ;AAER,SACE,KAAC,IAAD;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEb,QADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGuB,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,gBAAD;AAAkB,UAAA,YAAY,EAAEA;AAAhC,UAAd;AAAA;AAFd;AADF,IADF;AAQD,CAxCD;;AAyCA,eAAexB,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Auth, API } from \"aws-amplify\";\r\nimport { View, Text, FlatList } from \"react-native\";\r\nimport { listRentOrders } from \"../../graphql/queries\";\r\nimport BorrowerHeadScreen from \"../../components/BorrowerHead\";\r\nconst LenderScreen = () => {\r\n  const [newItems, setNewItems] = useState([]);\r\n  const [userID, setUserID] = useState(\"\");\r\n  Auth.currentAuthenticatedUser()\r\n    .then((user) => {\r\n      //   console.log(\"user id is: \", user.attributes.sub);\r\n      setUserID(user.attributes.sub);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      throw err;\r\n    });\r\n  const fetchAll = async () => {\r\n    try {\r\n      const orderList = await API.graphql({\r\n        query: listRentOrders,\r\n        variables: {\r\n          filter: {\r\n            lenderUserID: { eq: userID },\r\n          },\r\n        },\r\n      });\r\n\r\n      setNewItems(orderList.data.listRentOrders.items);\r\n      //   consolea.log(\"Order data is: \", orderList.data.listRentOrders.items);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  fetchAll();\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={newItems}\r\n        renderItem={({ item }) => <LenderHeadScreen BorrowerHead={item} />}\r\n      />\r\n    </View>\r\n  );\r\n};\r\nexport default LenderScreen;\r\n"]},"metadata":{},"sourceType":"module"}