{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar PostDetails = function PostDetails() {\n  var route = useRoute();\n  var navigation = useNavigation();\n  console.log(\"Postdetails title is: \", route.params.postInfo.title);\n\n  var _useState = useState(JSON.parse(route.params.postInfo.images)),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setimages = _useState2[1];\n\n  var _useState3 = useState(route.params.postInfo.owner),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var substrEmail = userEmail.substr(0, userEmail.indexOf(\"@\"));\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      menuToggle = _useState6[0],\n      setMenuToggle = _useState6[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeaderForDesktop, {\n      setMenuToggle: setMenuToggle,\n      menuToggle: menuToggle\n    }), _jsxs(View, {\n      children: [_jsx(ScrollView, {\n        horizontal: true,\n        children: images && images.map(function (data, index) {\n          return _jsx(Image, {\n            source: {\n              uri: \"https://dnezpuwttqdfg.cloudfront.net/fit-in/500x500/public/\" + images[index].imageUri\n            },\n            style: {\n              height: 320,\n              width: 380,\n              marginRight: 10\n            }\n          }, index);\n        })\n      }), _jsx(Text, {\n        style: {\n          marginLeft: 10,\n          fontSize: 30,\n          fontWeight: \"bold\",\n          marginRight: 10,\n          marginTop: 30,\n          color: colors.secondary\n        },\n        children: route.params.postInfo.title\n      }), _jsxs(View, {\n        style: {\n          margin: 10,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginTop: 20,\n          marginBottom: 20\n        },\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: colors.secondary,\n            height: 50,\n            width: 50,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: 50,\n            paddingRight: 5,\n            marginRight: 10\n          },\n          children: _jsxs(Text, {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: 20,\n              color: colors.primary\n            },\n            children: [\" \", substrEmail.charAt(0).toUpperCase()]\n          })\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              color: colors.grey\n            },\n            children: \"Owned by\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 15,\n              fontWeight: \"bold\"\n            },\n            children: substrEmail\n          })]\n        })]\n      }), _jsxs(View, {\n        style: {\n          margin: 10,\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          borderTopWidth: 1,\n          borderTopColor: \"lightgrey\",\n          borderBottomWidth: 1,\n          borderBottomColor: \"lightgrey\",\n          paddingVertical: 20\n        },\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\",\n              color: colors.secondary\n            },\n            children: [\"$ \", route.params.postInfo.rentValue]\n          }), _jsx(Text, {\n            style: {\n              color: colors.grey\n            },\n            children: \"A day\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\",\n              color: colors.secondary\n            },\n            children: [\"$ \", route.params.postInfo.rentValue * 7]\n          }), _jsx(Text, {\n            style: {\n              color: colors.grey\n            },\n            children: \"A week\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\",\n              color: colors.secondary\n            },\n            children: [\"$ \", route.params.postInfo.rentValue * 30]\n          }), _jsx(Text, {\n            style: {\n              color: colors.grey\n            },\n            children: \"A month\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: {\n          margin: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: colors.grey\n          },\n          children: \"Preferred Meetup Location\"\n        }), _jsx(Text, {\n          style: {\n            color: colors.secondary\n          },\n          children: route.params.postInfo.locationName\n        })]\n      }), _jsxs(View, {\n        style: {\n          margin: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: colors.grey\n          },\n          children: \"Description\"\n        }), _jsx(Text, {\n          style: {\n            color: colors.secondary\n          },\n          children: route.params.postInfo.description\n        })]\n      })]\n    }), _jsx(MenuDetailsForDesktop, {\n      menuToggle: menuToggle\n    })]\n  });\n};\n\nexport default PostDetails;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/postDetails/index.js"],"names":["React","useState","StatusBar","PostItems","HeaderForMobile","colors","useNavigation","useRoute","HeaderForDesktop","MenuDetailsForDesktop","PostDetails","route","navigation","console","log","params","postInfo","title","JSON","parse","images","setimages","owner","userEmail","setUserEmail","substrEmail","substr","indexOf","menuToggle","setMenuToggle","map","data","index","uri","imageUri","height","width","marginRight","marginLeft","fontSize","fontWeight","marginTop","color","secondary","margin","flexDirection","alignItems","marginBottom","backgroundColor","justifyContent","borderRadius","paddingRight","primary","charAt","toUpperCase","grey","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","paddingVertical","rentValue","locationName","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  View,\n  Text,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nconst PostDetails = () => {\n  const route = useRoute();\n  const navigation = useNavigation();\n  console.log(\"Postdetails title is: \", route.params.postInfo.title);\n  const [images, setimages] = useState(\n    JSON.parse(route.params.postInfo.images)\n  );\n  const [userEmail, setUserEmail] = useState(route.params.postInfo.owner);\n  const substrEmail = userEmail.substr(0, userEmail.indexOf(\"@\"));\n  // setUserEmail(substrEmail);\n  const [menuToggle, setMenuToggle] = useState(false);\n  return (\n    <>\n      <HeaderForDesktop setMenuToggle={setMenuToggle} menuToggle={menuToggle} />\n      <View>\n        <ScrollView horizontal={true}>\n          {images &&\n            images.map((data, index) => (\n              <Image\n                source={{\n                  uri:\n                    \"https://dnezpuwttqdfg.cloudfront.net/fit-in/500x500/public/\" +\n                    images[index].imageUri,\n                }}\n                style={{\n                  height: 320,\n                  width: 380,\n                  marginRight: 10,\n                }}\n                key={index}\n              />\n            ))}\n        </ScrollView>\n        <Text\n          style={{\n            marginLeft: 10,\n            fontSize: 30,\n            fontWeight: \"bold\",\n            marginRight: 10,\n            marginTop: 30,\n            color: colors.secondary,\n          }}>\n          {route.params.postInfo.title}\n        </Text>\n        <View\n          style={{\n            margin: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginTop: 20,\n            marginBottom: 20,\n          }}>\n          <View\n            style={{\n              backgroundColor: colors.secondary,\n              height: 50,\n              width: 50,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRadius: 50,\n              paddingRight: 5,\n              marginRight: 10,\n            }}>\n            <Text\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 20,\n                color: colors.primary,\n              }}>\n              {\" \"}\n              {substrEmail.charAt(0).toUpperCase()}\n            </Text>\n          </View>\n          <View>\n            <Text style={{ color: colors.grey }}>Owned by</Text>\n            <Text style={{ fontSize: 15, fontWeight: \"bold\" }}>\n              {substrEmail}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={{\n            margin: 10,\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            borderTopWidth: 1,\n            borderTopColor: \"lightgrey\",\n            borderBottomWidth: 1,\n            borderBottomColor: \"lightgrey\",\n            paddingVertical: 20,\n          }}>\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            <Text\n              style={{\n                fontSize: 20,\n                fontWeight: \"bold\",\n                color: colors.secondary,\n              }}>\n              $ {route.params.postInfo.rentValue}\n            </Text>\n            <Text style={{ color: colors.grey }}>A day</Text>\n          </View>\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            <Text\n              style={{\n                fontSize: 20,\n                fontWeight: \"bold\",\n                color: colors.secondary,\n              }}>\n              $ {route.params.postInfo.rentValue * 7}\n            </Text>\n            <Text style={{ color: colors.grey }}>A week</Text>\n          </View>\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            <Text\n              style={{\n                fontSize: 20,\n                fontWeight: \"bold\",\n                color: colors.secondary,\n              }}>\n              $ {route.params.postInfo.rentValue * 30}\n            </Text>\n            <Text style={{ color: colors.grey }}>A month</Text>\n          </View>\n        </View>\n        <View style={{ margin: 10 }}>\n          <Text style={{ color: colors.grey }}>Preferred Meetup Location</Text>\n          <Text style={{ color: colors.secondary }}>\n            {route.params.postInfo.locationName}\n          </Text>\n        </View>\n        <View style={{ margin: 10 }}>\n          <Text style={{ color: colors.grey }}>Description</Text>\n          <Text style={{ color: colors.secondary }}>\n            {route.params.postInfo.description}\n          </Text>\n        </View>\n      </View>\n      <MenuDetailsForDesktop menuToggle={menuToggle} />\n    </>\n  );\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}