{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./styles\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar HeaderForMobile = function HeaderForMobile(props) {\n  var navigation = useNavigation();\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n\n  function onSearch(e) {\n    props.setSearchText(e);\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: [styles.headerWrap, {\n        display: windowWidth > 800 ? \"none\" : \"flex\"\n      }],\n      children: [_jsxs(View, {\n        style: styles.searchByTextWrap,\n        children: [_jsx(Feather, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(TextInput, {\n          placeholder: \"Search in Rent.com\",\n          style: [styles.searchPlaceholder, {\n            width: \"100%\"\n          }],\n          multiline: false,\n          onSubmitEditing: function onSubmitEditing(event) {\n            return onSearch(event.nativeEvent.text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.locationCatSearchWrap,\n        children: [_jsxs(Pressable, {\n          onPress: function onPress() {\n            navigation.navigate(\"LocationSearch\");\n          },\n          style: styles.locationSearchWrap,\n          children: [_jsx(MaterialIcons, {\n            name: \"location-on\",\n            size: 24,\n            color: \"black\"\n          }), _jsx(Text, {\n            children: \"Location\"\n          }), _jsx(Text, {\n            style: styles.locationSearchText,\n            children: props.searchByLocation.locationName\n          })]\n        }), _jsxs(Pressable, {\n          onPress: function onPress() {\n            navigation.navigate(\"CategorySearch\");\n          },\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Octicons, {\n            name: \"settings\",\n            size: 24,\n            color: \"black\"\n          }), _jsx(Text, {\n            style: styles.catText,\n            children: \"Category\"\n          }), _jsx(Text, {\n            style: styles.catDynText,\n            children: props.searchByCategory.catName\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default HeaderForMobile;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/components/headerForMobile/index.js"],"names":["StatusBar","styles","Feather","MaterialIcons","Octicons","NavigationContainer","useNavigation","HeaderForMobile","props","navigation","windowWidth","Number","Dimensions","get","width","onSearch","e","setSearchText","headerWrap","display","searchByTextWrap","searchPlaceholder","event","nativeEvent","text","locationCatSearchWrap","navigate","locationSearchWrap","locationSearchText","searchByLocation","locationName","flexDirection","catText","catDynText","searchByCategory","catName"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;AASA,OAAOC,MAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAMC,UAAU,GAAGH,aAAa,EAAhC;AACA,MAAMI,WAAW,GAAGC,MAAM,CAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA1B,CAA1B;;AACA,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBR,IAAAA,KAAK,CAACS,aAAN,CAAoBD,CAApB;AACD;;AACD,SACE;AAAA,cACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLf,MAAM,CAACiB,UADF,EAEL;AAAEC,QAAAA,OAAO,EAAET,WAAW,GAAG,GAAd,GAAoB,MAApB,GAA6B;AAAxC,OAFK,CADT;AAAA,iBAKE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACmB,gBAApB;AAAA,mBACE,KAAC,OAAD;AAAS,UAAA,IAAI,EAAC,QAAd;AAAuB,UAAA,IAAI,EAAE,EAA7B;AAAiC,UAAA,KAAK,EAAC;AAAvC,UADF,EAEE,KAAC,SAAD;AACE,UAAA,WAAW,EAAC,oBADd;AAEE,UAAA,KAAK,EAAE,CAACnB,MAAM,CAACoB,iBAAR,EAA2B;AAAEP,YAAAA,KAAK,EAAE;AAAT,WAA3B,CAFT;AAGE,UAAA,SAAS,EAAE,KAHb;AAIE,UAAA,eAAe,EAAE,yBAACQ,KAAD;AAAA,mBAAWP,QAAQ,CAACO,KAAK,CAACC,WAAN,CAAkBC,IAAnB,CAAnB;AAAA;AAJnB,UAFF;AAAA,QALF,EAcE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,qBAApB;AAAA,mBACE,MAAC,SAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbhB,YAAAA,UAAU,CAACiB,QAAX,CAAoB,gBAApB;AACD,WAHH;AAIE,UAAA,KAAK,EAAEzB,MAAM,CAAC0B,kBAJhB;AAAA,qBAKE,KAAC,aAAD;AAAe,YAAA,IAAI,EAAC,aAApB;AAAkC,YAAA,IAAI,EAAE,EAAxC;AAA4C,YAAA,KAAK,EAAC;AAAlD,YALF,EAME,KAAC,IAAD;AAAA;AAAA,YANF,EAOE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE1B,MAAM,CAAC2B,kBAApB;AAAA,sBACGpB,KAAK,CAACqB,gBAAN,CAAuBC;AAD1B,YAPF;AAAA,UADF,EAYE,MAAC,SAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbrB,YAAAA,UAAU,CAACiB,QAAX,CAAoB,gBAApB;AACD,WAHH;AAIE,UAAA,KAAK,EAAE;AAAEK,YAAAA,aAAa,EAAE;AAAjB,WAJT;AAAA,qBAKE,KAAC,QAAD;AAAU,YAAA,IAAI,EAAC,UAAf;AAA0B,YAAA,IAAI,EAAE,EAAhC;AAAoC,YAAA,KAAK,EAAC;AAA1C,YALF,EAME,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE9B,MAAM,CAAC+B,OAApB;AAAA;AAAA,YANF,EAOE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE/B,MAAM,CAACgC,UAApB;AAAA,sBACGzB,KAAK,CAAC0B,gBAAN,CAAuBC;AAD1B,YAPF;AAAA,UAZF;AAAA,QAdF;AAAA;AADF,IADF;AA2CD,CAjDD;;AAkDA,eAAe5B,eAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport {\n  Text,\n  View,\n  TextInput,\n  Dimensions,\n  Platform,\n  Pressable,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nconst HeaderForMobile = (props) => {\n  const navigation = useNavigation();\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  function onSearch(e) {\n    props.setSearchText(e);\n  }\n  return (\n    <>\n      <View\n        style={[\n          styles.headerWrap,\n          { display: windowWidth > 800 ? \"none\" : \"flex\" },\n        ]}>\n        <View style={styles.searchByTextWrap}>\n          <Feather name=\"search\" size={24} color=\"black\" />\n          <TextInput\n            placeholder=\"Search in Rent.com\"\n            style={[styles.searchPlaceholder, { width: \"100%\" }]}\n            multiline={false}\n            onSubmitEditing={(event) => onSearch(event.nativeEvent.text)}\n          />\n        </View>\n        <View style={styles.locationCatSearchWrap}>\n          <Pressable\n            onPress={() => {\n              navigation.navigate(\"LocationSearch\");\n            }}\n            style={styles.locationSearchWrap}>\n            <MaterialIcons name=\"location-on\" size={24} color=\"black\" />\n            <Text>Location</Text>\n            <Text style={styles.locationSearchText}>\n              {props.searchByLocation.locationName}\n            </Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigation.navigate(\"CategorySearch\");\n            }}\n            style={{ flexDirection: \"row\" }}>\n            <Octicons name=\"settings\" size={24} color=\"black\" />\n            <Text style={styles.catText}>Category</Text>\n            <Text style={styles.catDynText}>\n              {props.searchByCategory.catName}\n            </Text>\n          </Pressable>\n        </View>\n      </View>\n    </>\n  );\n};\nexport default HeaderForMobile;\n"]},"metadata":{},"sourceType":"module"}