{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport DesktopMenu from \"../../components/desktopMenu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      newItems = _useState2[0],\n      setNewItems = _useState2[1];\n\n  var fetchAll = function fetchAll() {\n    var itemListByCommonID;\n    return _regeneratorRuntime.async(function fetchAll$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: getListingByCreatedAt,\n              variables: {\n                commonID: \"1\",\n                sortDirection: \"DESC\"\n              },\n              authMode: \"AWS_IAM\"\n            }));\n\n          case 3:\n            itemListByCommonID = _context.sent;\n            setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    fetchAll();\n  }, []);\n\n  var pull_data = function pull_data(data) {\n    console.log(data);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      menuToggle = _useState4[0],\n      setMenuToggle = _useState4[1];\n\n  alert(menuToggle);\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeaderForMobile, {}), _jsx(HeaderForDesktop, {\n      setMenuToggle: setMenuToggle,\n      menuToggle: menuToggle\n    }), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        position: \"relative\"\n      },\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          width: windowWidth > 800 ? \"80%\" : \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            display: windowWidth > 800 ? \"flex\" : \"none\",\n            flexBasis: \"20%\"\n          },\n          children: _jsx(CategoryForDesktop, {})\n        }), _jsx(FlatList, {\n          style: {\n            flexBasis: \"80%\"\n          },\n          data: newItems,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(PostItems, {\n              post: item\n            });\n          }\n        })]\n      }), _jsx(DesktopMenu, {\n        menuToggle: menuToggle\n      })]\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/Home/index.js"],"names":["React","useEffect","useState","StatusBar","PostItems","HeaderForMobile","colors","API","getListingByCreatedAt","HeaderForDesktop","CategoryForDesktop","DesktopMenu","Home","windowWidth","Number","Dimensions","get","width","newItems","setNewItems","fetchAll","graphql","query","variables","commonID","sortDirection","authMode","itemListByCommonID","data","items","console","log","pull_data","menuToggle","setMenuToggle","alert","flex","alignItems","position","flexDirection","justifyContent","display","flexBasis","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  FlatList,\n  View,\n  Text,\n  Dimensions,\n} from \"react-native\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport DesktopMenu from \"../../components/desktopMenu\";\nconst Home = () => {\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  const [newItems, setNewItems] = useState([]);\n  const fetchAll = async () => {\n    try {\n      const itemListByCommonID = await API.graphql({\n        query: getListingByCreatedAt,\n        variables: { commonID: \"1\", sortDirection: \"DESC\" },\n        authMode: \"AWS_IAM\",\n      });\n\n      setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchAll();\n  }, []);\n  const pull_data = (data) => {\n    console.log(data); // LOGS DATA FROM CHILD (My name is Dean Winchester... &)\n  };\n  const [menuToggle, setMenuToggle] = useState(false);\n  alert(menuToggle);\n  return (\n    <>\n      <HeaderForMobile />\n      <HeaderForDesktop setMenuToggle={setMenuToggle} menuToggle={menuToggle} />\n      <View style={{ flex: 1, alignItems: \"center\", position: \"relative\" }}>\n        <View\n          style={{\n            flex: 1,\n            width: windowWidth > 800 ? \"80%\" : \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n          }}>\n          <View\n            style={{\n              display: windowWidth > 800 ? \"flex\" : \"none\",\n              flexBasis: \"20%\",\n            }}>\n            <CategoryForDesktop />\n          </View>\n          <FlatList\n            style={{ flexBasis: \"80%\" }}\n            data={newItems}\n            renderItem={({ item }) => <PostItems post={item} />}\n          />\n        </View>\n        <DesktopMenu menuToggle={menuToggle} />\n      </View>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}