{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt, searchListings } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  var route = useRoute();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState({\n    locationName: \"New York\",\n    locationId: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchByLocation = _useState4[0],\n      setSearchByLocation = _useState4[1];\n\n  var _useState5 = useState({\n    catName: \"All\",\n    catId: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchByCategory = _useState6[0],\n      setSearchByCategory = _useState6[1];\n\n  useEffect(function () {\n    if (!route.params) {\n      console.log(\"Params not set\");\n    } else if (route.params.locID !== undefined) {\n      setSearchByLocation({\n        locationName: route.params.locName,\n        locationId: route.params.locID\n      });\n    } else if (route.params.catID !== undefined) {\n      setSearchByCategory({\n        catName: route.params.catName,\n        catId: route.params.catID\n      });\n    }\n  }, [route.params]);\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newItems = _useState8[0],\n      setNewItems = _useState8[1];\n\n  var searChWithLocation = function searChWithLocation(searchString) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"cat name\", searchByCategory.catId);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  locationID: {\n                    eq: searchByLocation.locationId\n                  }\n                }\n              }\n            }));\n\n          case 4:\n            newSearchItems = _context.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var searChWithText = function searChWithText(searchString) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithText$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  title: {\n                    match: searchString\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context2.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            console.log(\"Search by text result\", newItems);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var searChWithLocationAndText = function searChWithLocationAndText(searchString) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithLocationAndText$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  or: {\n                    title: {\n                      match: searchString\n                    },\n                    locationID: {\n                      eq: searchByLocation.locationId\n                    }\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context3.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var searchByCatFunc = function searchByCatFunc() {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searchByCatFunc$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  categoryID: {\n                    eq: searchByCategory.catId\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context4.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var searChWithLocationAndCategory = function searChWithLocationAndCategory(searchByCategoryy) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithLocationAndCategory$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  or: {\n                    categoryID: {\n                      eq: searchByCategory.catId\n                    },\n                    locationID: {\n                      eq: searchByLocation.locationId\n                    }\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context5.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(_context5.t0);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var searChWithTextAndCategory = function searChWithTextAndCategory(searchString, searchByCategoryy) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithTextAndCategory$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  or: {\n                    categoryID: {\n                      eq: searchByCategory.catId\n                    },\n                    title: {\n                      match: searchString\n                    }\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context6.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context6.next = 10;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var searChWithLocationAndTextAndCategory = function searChWithLocationAndTextAndCategory(searchString, searchByCategoryy) {\n    var newSearchItems;\n    return _regeneratorRuntime.async(function searChWithLocationAndTextAndCategory$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: searchListings,\n              authMode: \"AWS_IAM\",\n              variables: {\n                filter: {\n                  or: {\n                    title: {\n                      match: searchString\n                    },\n                    locationID: {\n                      eq: searchByLocation.locationId\n                    },\n                    categoryID: {\n                      eq: searchByCategory.catId\n                    }\n                  }\n                }\n              }\n            }));\n\n          case 3:\n            newSearchItems = _context7.sent;\n            setNewItems(newSearchItems.data.searchListings.items);\n            _context7.next = 10;\n            break;\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    if (searchByLocation.locationId !== \"\") {\n      console.log(\"location id changeg\", searchByLocation);\n\n      if (searchByCategory.catId == \"\") {\n        if (searchText !== \"\") {\n          searChWithLocationAndText(searchText);\n        } else {\n          searChWithLocation();\n        }\n      } else {\n        if (searchText !== \"\") {\n          searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n        } else {\n          searChWithLocationAndCategory(searchByCategory);\n        }\n      }\n    } else {\n      console.log(\"location id has not change\", searchByLocation);\n    }\n  }, [searchByLocation]);\n  useEffect(function () {\n    if (searchText !== \"\") {\n      if (searchByCategory.catId == \"\") {\n        console.log(\"searchText id change\", searchText);\n\n        if (searchByLocation.locationId !== \"\") {\n          searChWithLocationAndText(searchText);\n        } else {\n          searChWithText(searchText);\n        }\n      } else {\n        console.log(\"searchText id change\", searchText);\n\n        if (searchByLocation.locationId !== \"\") {\n          searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n        } else {\n          searChWithTextAndCategory(searchText, searchByCategory);\n        }\n      }\n    } else {\n      console.log(\"searchText id has not change\", searchText);\n    }\n  }, [searchText]);\n  useEffect(function () {\n    if (searchByCategory.catId !== \"\") {\n      console.log(\"searchText id change\", searchText);\n\n      if (searchByLocation.locationId !== \"\") {\n        searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n      } else if (searchText !== \"\") {\n        searChWithTextAndCategory(searchText, searchByCategory);\n      } else {\n        searchByCatFunc(searchByCategory);\n      }\n    } else {\n      console.log(\"searchText id has not change\", searchText);\n    }\n  }, [searchByCategory]);\n\n  var fetchAll = function fetchAll() {\n    var itemListByCommonID;\n    return _regeneratorRuntime.async(function fetchAll$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql({\n              query: getListingByCreatedAt,\n              variables: {\n                commonID: \"1\",\n                sortDirection: \"DESC\"\n              },\n              authMode: \"AWS_IAM\"\n            }));\n\n          case 3:\n            itemListByCommonID = _context8.sent;\n            setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n            _context8.next = 10;\n            break;\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.log(_context8.t0);\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    fetchAll();\n  }, []);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      menuToggle = _useState10[0],\n      setMenuToggle = _useState10[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(HeaderForMobile, {\n      setSearchText: setSearchText,\n      searchByCategory: searchByCategory,\n      searchByLocation: searchByLocation\n    }), _jsx(HeaderForDesktop, {\n      setMenuToggle: setMenuToggle,\n      menuToggle: menuToggle\n    }), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        position: \"relative\"\n      },\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          width: windowWidth > 800 ? \"80%\" : \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            display: windowWidth > 800 ? \"flex\" : \"none\",\n            flexBasis: \"20%\"\n          },\n          children: _jsx(CategoryForDesktop, {})\n        }), _jsx(FlatList, {\n          style: {\n            flexBasis: \"80%\",\n            marginTop: 10\n          },\n          data: newItems,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(PostItems, {\n              post: item\n            });\n          }\n        })]\n      }), _jsx(MenuDetailsForDesktop, {\n        menuToggle: menuToggle,\n        top: -20,\n        right: \"9.2%\"\n      })]\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/Home/index.js"],"names":["React","useEffect","useState","StatusBar","PostItems","HeaderForMobile","colors","API","getListingByCreatedAt","searchListings","HeaderForDesktop","CategoryForDesktop","MenuDetailsForDesktop","useRoute","Home","route","searchText","setSearchText","locationName","locationId","searchByLocation","setSearchByLocation","catName","catId","searchByCategory","setSearchByCategory","params","console","log","locID","undefined","locName","catID","windowWidth","Number","Dimensions","get","width","newItems","setNewItems","searChWithLocation","searchString","graphql","query","authMode","variables","filter","locationID","eq","newSearchItems","data","items","searChWithText","title","match","searChWithLocationAndText","or","searchByCatFunc","categoryID","searChWithLocationAndCategory","searchByCategoryy","searChWithTextAndCategory","searChWithLocationAndTextAndCategory","fetchAll","commonID","sortDirection","itemListByCommonID","menuToggle","setMenuToggle","flex","alignItems","position","flexDirection","justifyContent","display","flexBasis","marginTop","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  FlatList,\n  View,\n  Text,\n  Dimensions,\n} from \"react-native\";\nimport PostItems from \"../../components/postItems\";\nimport HeaderForMobile from \"../../components/headerForMobile\";\nimport { colors } from \"../../modal/color\";\nimport { API } from \"aws-amplify\";\nimport { getListingByCreatedAt, searchListings } from \"../../graphql/queries\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport CategoryForDesktop from \"../../components/categoryForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { useRoute } from \"@react-navigation/native\";\nconst Home = () => {\n  const route = useRoute();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchByLocation, setSearchByLocation] = useState({\n    locationName: \"New York\",\n    locationId: \"\",\n  });\n  const [searchByCategory, setSearchByCategory] = useState({\n    catName: \"All\",\n    catId: \"\",\n  });\n\n  // useEffect(() => {\n  //   if (searchText !== \"\") {\n  //     alert(searchText);\n  //   }\n  // }, [searchText]);\n  useEffect(() => {\n    if (!route.params) {\n      console.log(\"Params not set\");\n    } else if (route.params.locID !== undefined) {\n      setSearchByLocation({\n        locationName: route.params.locName,\n        locationId: route.params.locID,\n      });\n    } else if (route.params.catID !== undefined) {\n      setSearchByCategory({\n        catName: route.params.catName,\n        catId: route.params.catID,\n      });\n    }\n  }, [route.params]);\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  const [newItems, setNewItems] = useState([]);\n\n  var searChWithLocation = async (searchString) => {\n    console.log(\"cat name\", searchByCategory.catId);\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            locationID: { eq: searchByLocation.locationId },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searChWithText = async (searchString) => {\n    // alert(\"search by only text\");\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            title: {\n              match: searchString,\n            },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n      console.log(\"Search by text result\", newItems);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searChWithLocationAndText = async (searchString) => {\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            or: {\n              title: {\n                match: searchString,\n              },\n              locationID: { eq: searchByLocation.locationId },\n            },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searchByCatFunc = async () => {\n    // alert(\"only category func\");\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            categoryID: { eq: searchByCategory.catId },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searChWithLocationAndCategory = async (searchByCategoryy) => {\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            or: {\n              categoryID: { eq: searchByCategory.catId },\n              locationID: { eq: searchByLocation.locationId },\n            },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searChWithTextAndCategory = async (searchString, searchByCategoryy) => {\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            or: {\n              categoryID: { eq: searchByCategory.catId },\n              title: {\n                match: searchString,\n              },\n            },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  var searChWithLocationAndTextAndCategory = async (\n    searchString,\n    searchByCategoryy\n  ) => {\n    try {\n      const newSearchItems = await API.graphql({\n        query: searchListings,\n        authMode: \"AWS_IAM\",\n        variables: {\n          filter: {\n            or: {\n              title: {\n                match: searchString,\n              },\n              locationID: { eq: searchByLocation.locationId },\n              categoryID: { eq: searchByCategory.catId },\n            },\n          },\n        },\n      });\n      setNewItems(newSearchItems.data.searchListings.items);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    if (searchByLocation.locationId !== \"\") {\n      console.log(\"location id changeg\", searchByLocation);\n      if (searchByCategory.catId == \"\") {\n        if (searchText !== \"\") {\n          searChWithLocationAndText(searchText);\n        } else {\n          searChWithLocation();\n        }\n      } else {\n        if (searchText !== \"\") {\n          searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n        } else {\n          searChWithLocationAndCategory(searchByCategory);\n        }\n      }\n    } else {\n      console.log(\"location id has not change\", searchByLocation);\n    }\n  }, [searchByLocation]);\n  useEffect(() => {\n    if (searchText !== \"\") {\n      if (searchByCategory.catId == \"\") {\n        console.log(\"searchText id change\", searchText);\n        if (searchByLocation.locationId !== \"\") {\n          searChWithLocationAndText(searchText);\n        } else {\n          searChWithText(searchText);\n        }\n      } else {\n        console.log(\"searchText id change\", searchText);\n        if (searchByLocation.locationId !== \"\") {\n          searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n        } else {\n          searChWithTextAndCategory(searchText, searchByCategory);\n        }\n      }\n    } else {\n      console.log(\"searchText id has not change\", searchText);\n    }\n  }, [searchText]);\n  useEffect(() => {\n    if (searchByCategory.catId !== \"\") {\n      console.log(\"searchText id change\", searchText);\n      if (searchByLocation.locationId !== \"\") {\n        // alert(searchByCategory.catId);\n        searChWithLocationAndTextAndCategory(searchText, searchByCategory);\n      } else if (searchText !== \"\") {\n        searChWithTextAndCategory(searchText, searchByCategory);\n      } else {\n        searchByCatFunc(searchByCategory);\n      }\n    } else {\n      console.log(\"searchText id has not change\", searchText);\n    }\n  }, [searchByCategory]);\n\n  const fetchAll = async () => {\n    try {\n      const itemListByCommonID = await API.graphql({\n        query: getListingByCreatedAt,\n        variables: { commonID: \"1\", sortDirection: \"DESC\" },\n        authMode: \"AWS_IAM\",\n      });\n\n      setNewItems(itemListByCommonID.data.getListingByCreatedAt.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchAll();\n  }, []);\n  const [menuToggle, setMenuToggle] = useState(false);\n  return (\n    <>\n      <HeaderForMobile\n        setSearchText={setSearchText}\n        searchByCategory={searchByCategory}\n        searchByLocation={searchByLocation}\n      />\n      <HeaderForDesktop setMenuToggle={setMenuToggle} menuToggle={menuToggle} />\n      <View style={{ flex: 1, alignItems: \"center\", position: \"relative\" }}>\n        <View\n          style={{\n            flex: 1,\n            width: windowWidth > 800 ? \"80%\" : \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n          }}>\n          <View\n            style={{\n              display: windowWidth > 800 ? \"flex\" : \"none\",\n              flexBasis: \"20%\",\n            }}>\n            <CategoryForDesktop />\n          </View>\n          <FlatList\n            style={{ flexBasis: \"80%\", marginTop: 10 }}\n            data={newItems}\n            renderItem={({ item }) => <PostItems post={item} />}\n          />\n        </View>\n        <MenuDetailsForDesktop\n          menuToggle={menuToggle}\n          top={-20}\n          right={\"9.2%\"}\n        />\n      </View>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}