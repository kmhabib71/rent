{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styled from 'styled-components/native';\nimport * as MediaLibrary from 'expo-media-library';\nimport { getAssetsAsync, getAssetInfoAsync } from 'expo-media-library';\nimport { AssetList } from \"./AssetList\";\nimport DefaultTopNavigator from \"./Navigator\";\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport ErrorDisplay from \"./ErrorDisplay\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AssetsSelector = function AssetsSelector(_ref) {\n  var Resize = _ref.Resize,\n      Settings = _ref.Settings,\n      Errors = _ref.Errors,\n      Styles = _ref.Styles,\n      Navigator = _ref.Navigator,\n      CustomNavigator = _ref.CustomNavigator;\n\n  var getScreen = function getScreen() {\n    return Dimensions.get('screen');\n  };\n\n  var _useMemo = useMemo(function () {\n    return getScreen();\n  }, []),\n      width = _useMemo.width,\n      height = _useMemo.height;\n\n  var COLUMNS = height >= width ? Settings.portraitCols : Settings.landscapeCols;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItems = _useState2[0],\n      setSelectedItems = _useState2[1];\n\n  var _useState3 = useState({\n    hasMediaLibraryPermission: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      permissions = _useState4[0],\n      setPermissions = _useState4[1];\n\n  var _useState5 = useState({\n    first: 100,\n    totalCount: 0,\n    after: '',\n    endCursor: '',\n    hasNextPage: true\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availableOptions = _useState6[0],\n      setAvailableOptions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      assetItems = _useState8[0],\n      setItems = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState({\n    hasError: false,\n    errorType: 'hasErrorWithPermissions'\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var loadAssets = useCallback(function _callee(params) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getAssetsAsync(params).then(function (_ref2) {\n              var endCursor = _ref2.endCursor,\n                  assets = _ref2.assets,\n                  hasNextPage = _ref2.hasNextPage;\n\n              if (assets.length <= 0) {\n                setLoading(false);\n                return setError({\n                  hasError: true,\n                  errorType: 'hasNoAssets'\n                });\n              }\n\n              if (availableOptions.after === endCursor) return;\n              setAvailableOptions(_objectSpread(_objectSpread({}, availableOptions), {}, {\n                after: endCursor,\n                hasNextPage: hasNextPage\n              }));\n              setLoading(false);\n              return setItems([].concat(_toConsumableArray(assetItems), _toConsumableArray(assets)));\n            }).catch(function () {\n              setLoading(false);\n              setError({\n                hasError: true,\n                errorType: 'hasErrorWithLoading'\n              });\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [assetItems]);\n  var getMediaLibraryPermission = useCallback(function _callee2() {\n    var _await$MediaLibrary$r, MEDIA_LIBRARY;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync());\n\n          case 3:\n            _await$MediaLibrary$r = _context2.sent;\n            MEDIA_LIBRARY = _await$MediaLibrary$r.status;\n\n            if (MEDIA_LIBRARY !== 'granted') {\n              setLoading(false);\n              setError({\n                hasError: true,\n                errorType: 'hasErrorWithPermissions'\n              });\n            }\n\n            setPermissions({\n              hasMediaLibraryPermission: MEDIA_LIBRARY === 'granted'\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            setError({\n              hasError: true,\n              errorType: 'hasErrorWithPermissions'\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }, []);\n  var onClickUseCallBack = useCallback(function (id) {\n    setSelectedItems(function (selectedItems) {\n      var alreadySelected = selectedItems.indexOf(id) >= 0;\n      if (selectedItems.length >= Settings.maxSelection && !alreadySelected) return selectedItems;\n      if (alreadySelected) return selectedItems.filter(function (item) {\n        return item !== id;\n      });else return [].concat(_toConsumableArray(selectedItems), [id]);\n    });\n  }, []);\n  useEffect(function () {\n    Errors.onError == null ? void 0 : Errors.onError();\n    getAssets();\n  }, [Settings.assetsType, permissions.hasMediaLibraryPermission]);\n\n  var getAssets = function getAssets() {\n    try {\n      if (availableOptions.hasNextPage) {\n        var params = {\n          first: 100,\n          mediaType: Settings.assetsType,\n          sortBy: ['creationTime']\n        };\n        if (availableOptions.after) params.after = availableOptions.after;\n        if (!availableOptions.hasNextPage) return;\n        return permissions.hasMediaLibraryPermission ? loadAssets(params) : getMediaLibraryPermission();\n      }\n    } catch (err) {\n      setError({\n        hasError: true,\n        errorType: 'hasErrorWithLoading'\n      });\n    }\n\n    return;\n  };\n\n  var resizeImages = function resizeImages(image, manipulate) {\n    var base64, _width, _height, saveTo, compress, saveFormat, sizeOptions, options, format;\n\n    return _regeneratorRuntime.async(function resizeImages$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            base64 = manipulate.base64, _width = manipulate.width, _height = manipulate.height, saveTo = manipulate.saveTo, compress = manipulate.compress;\n            saveFormat = saveTo ? saveTo === 'jpeg' ? ImageManipulator.SaveFormat.JPEG : ImageManipulator.SaveFormat.PNG : ImageManipulator.SaveFormat.JPEG;\n            sizeOptions = {\n              width: _width,\n              height: _height\n            };\n\n            if (!_width && !_height) {\n              sizeOptions.width = image.width;\n              sizeOptions.height = image.height;\n            }\n\n            options = [{\n              resize: JSON.parse(JSON.stringify(sizeOptions))\n            }];\n            format = {\n              base64: base64,\n              compress: compress,\n              format: saveFormat\n            };\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, options, format));\n\n          case 9:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            setError({\n              hasError: true,\n              errorType: 'hasErrorWithResizing'\n            });\n            return _context3.abrupt(\"return\", image);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var prepareResponse = useCallback(function () {\n    return assetItems.filter(function (asset) {\n      return selectedItems.indexOf(asset.id) !== -1;\n    }).sort(function (a, b) {\n      return selectedItems.indexOf(a.id) - selectedItems.indexOf(b.id);\n    });\n  }, [selectedItems]);\n\n  var manipulateResults = function manipulateResults(source) {\n    var selectedAssets, selectedItemsMetaData, modAssets;\n    return _regeneratorRuntime.async(function manipulateResults$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setLoading(true);\n            selectedAssets = prepareResponse();\n            _context6.prev = 2;\n            selectedItemsMetaData = [];\n\n            if (!(Settings.getImageMetaData && !Resize)) {\n              _context6.next = 8;\n              break;\n            }\n\n            _context6.next = 7;\n            return _regeneratorRuntime.awrap(asyncForEach(selectedAssets, function _callee3(asset) {\n              var metaAsset;\n              return _regeneratorRuntime.async(function _callee3$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(getAssetInfoAsync(asset));\n\n                    case 2:\n                      metaAsset = _context4.sent;\n                      selectedItemsMetaData.push(metaAsset);\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 7:\n            return _context6.abrupt(\"return\", responseWithResults(source, selectedItemsMetaData));\n\n          case 8:\n            if (!Resize) {\n              _context6.next = 13;\n              break;\n            }\n\n            modAssets = [];\n            _context6.next = 12;\n            return _regeneratorRuntime.awrap(asyncForEach(selectedAssets, function _callee4(asset) {\n              var resizedImage;\n              return _regeneratorRuntime.async(function _callee4$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!(asset.mediaType === 'photo')) {\n                        _context5.next = 7;\n                        break;\n                      }\n\n                      _context5.next = 3;\n                      return _regeneratorRuntime.awrap(resizeImages(asset, Resize));\n\n                    case 3:\n                      resizedImage = _context5.sent;\n                      modAssets.push(_objectSpread(_objectSpread({}, resizedImage), {}, {\n                        mediaType: asset.mediaType\n                      }));\n                      _context5.next = 8;\n                      break;\n\n                    case 7:\n                      modAssets.push(asset);\n\n                    case 8:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 12:\n            return _context6.abrupt(\"return\", responseWithResults(source, modAssets));\n\n          case 13:\n            return _context6.abrupt(\"return\", responseWithResults(source, selectedAssets));\n\n          case 16:\n            _context6.prev = 16;\n            _context6.t0 = _context6[\"catch\"](2);\n            setError({\n              hasError: true,\n              errorType: 'hasErrorWithResizing'\n            });\n            return _context6.abrupt(\"return\", responseWithResults(source, selectedAssets));\n\n          case 20:\n            _context6.prev = 20;\n            setLoading(false);\n            return _context6.finish(20);\n\n          case 23:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[2, 16, 20, 23]], Promise);\n  };\n\n  var responseWithResults = function responseWithResults(navigation, assets) {\n    var _default = navigation === 'default';\n\n    return _default ? Navigator == null ? void 0 : Navigator.onSuccess(assets) : CustomNavigator == null ? void 0 : CustomNavigator.props.onSuccess(assets);\n  };\n\n  return _jsxs(Screen, {\n    bgColor: Styles.bgColor,\n    style: Styles.screenStyle,\n    children: [(CustomNavigator == null ? void 0 : CustomNavigator.Component) && _jsx(CustomNavigator.Component, _objectSpread(_objectSpread({}, CustomNavigator.props), {}, {\n      selected: selectedItems.length,\n      onSuccess: function onSuccess() {\n        return manipulateResults('custom');\n      }\n    })), Navigator && _jsx(DefaultTopNavigator, {\n      Texts: Navigator.Texts,\n      selected: selectedItems.length,\n      onBack: function onBack() {\n        return Navigator.onBack();\n      },\n      midTextColor: Navigator.midTextColor || 'black',\n      onSuccess: function onSuccess() {\n        return manipulateResults('default');\n      },\n      minSelection: Navigator.minSelection,\n      buttonTextStyle: Navigator.buttonTextStyle,\n      buttonStyle: Navigator.buttonStyle\n    }), isLoading ? _jsx(Spinner, {\n      color: Styles.spinnerColor\n    }) : error.hasError ? _jsx(HasError, {\n      bgColor: Styles.bgColor,\n      children: _jsx(ErrorDisplay, {\n        errorType: error.errorType,\n        errorTextColor: Errors.errorTextColor,\n        errorMessages: Errors.errorMessages\n      })\n    }) : _jsx(Widget, {\n      widgetWidth: Styles.widgetWidth,\n      bgColor: Styles.bgColor,\n      style: Styles.widgetStyle,\n      children: _jsx(AssetList, {\n        cols: COLUMNS,\n        margin: Styles.margin,\n        data: assetItems,\n        getMoreAssets: getAssets,\n        onClick: onClickUseCallBack,\n        selectedItems: selectedItems,\n        screen: width * Styles.widgetWidth / 100,\n        selectedIcon: Styles.selectedIcon,\n        videoIcon: Styles.videoIcon\n      })\n    })]\n  });\n};\n\nfunction asyncForEach(array, callback) {\n  var index;\n  return _regeneratorRuntime.async(function asyncForEach$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          index = 0;\n\n        case 1:\n          if (!(index < array.length)) {\n            _context7.next = 7;\n            break;\n          }\n\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(callback(array[index], index, array));\n\n        case 4:\n          index++;\n          _context7.next = 1;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar SpinnerStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  }\n});\n\nvar Spinner = function Spinner(_ref3) {\n  var color = _ref3.color;\n  return _jsx(View, {\n    style: [SpinnerStyle.container, SpinnerStyle.horizontal],\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: color\n    })\n  });\n};\n\nvar HasError = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    background-color: \", \";\\n    flex: 1;\\n    justify-content: center;\\n    align-items: center;\\n\"])), function (_ref4) {\n  var bgColor = _ref4.bgColor;\n  return bgColor;\n});\nvar Screen = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    background-color: \", \";\\n    flex: 1;\\n\"])), function (_ref5) {\n  var bgColor = _ref5.bgColor;\n  return bgColor;\n});\nvar Widget = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    margin: 0 auto;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    background-color: \", \";\\n    width: \", \"%;\\n    flex: 1;\\n\"])), function (_ref6) {\n  var bgColor = _ref6.bgColor;\n  return bgColor;\n}, function (_ref7) {\n  var widgetWidth = _ref7.widgetWidth;\n  return widgetWidth || 100;\n});\nexport default AssetsSelector;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/node_modules/expo-images-picker/src/AssetsSelector.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","styled","MediaLibrary","getAssetsAsync","getAssetInfoAsync","AssetList","DefaultTopNavigator","ImageManipulator","ErrorDisplay","AssetsSelector","Resize","Settings","Errors","Styles","Navigator","CustomNavigator","getScreen","Dimensions","get","width","height","COLUMNS","portraitCols","landscapeCols","selectedItems","setSelectedItems","hasMediaLibraryPermission","permissions","setPermissions","first","totalCount","after","endCursor","hasNextPage","availableOptions","setAvailableOptions","assetItems","setItems","isLoading","setLoading","hasError","errorType","error","setError","loadAssets","params","then","assets","length","catch","getMediaLibraryPermission","requestPermissionsAsync","MEDIA_LIBRARY","status","onClickUseCallBack","id","alreadySelected","indexOf","maxSelection","filter","item","onError","getAssets","assetsType","mediaType","sortBy","err","resizeImages","image","manipulate","base64","saveTo","compress","saveFormat","SaveFormat","JPEG","PNG","sizeOptions","options","resize","JSON","parse","stringify","format","manipulateAsync","uri","prepareResponse","asset","sort","a","b","manipulateResults","source","selectedAssets","selectedItemsMetaData","getImageMetaData","asyncForEach","metaAsset","push","responseWithResults","modAssets","resizedImage","navigation","_default","onSuccess","props","bgColor","screenStyle","Component","Texts","onBack","midTextColor","minSelection","buttonTextStyle","buttonStyle","spinnerColor","errorTextColor","errorMessages","widgetWidth","widgetStyle","margin","selectedIcon","videoIcon","array","callback","index","SpinnerStyle","StyleSheet","create","container","flex","justifyContent","horizontal","flexDirection","padding","Spinner","color","HasError","View","Screen","Widget"],"mappings":"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","sourcesContent":["import React, { FC, useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { Dimensions, View, ActivityIndicator, StyleSheet } from 'react-native'\r\nimport styled from 'styled-components/native'\r\nimport * as MediaLibrary from 'expo-media-library'\r\nimport {\r\n    Asset,\r\n    AssetsOptions,\r\n    getAssetsAsync,\r\n    getAssetInfoAsync,\r\n} from 'expo-media-library'\r\nimport { AssetList } from './AssetList'\r\nimport DefaultTopNavigator from './Navigator'\r\nimport * as ImageManipulator from 'expo-image-manipulator'\r\n\r\nimport {\r\n    AssetSelectorPropTypes,\r\n    IAssetSelectorError,\r\n    IScreen,\r\n    IWidget,\r\n    PagedInfo,\r\n    ResizeType,\r\n} from './Types'\r\nimport { ImageResult } from 'expo-image-manipulator'\r\nimport ErrorDisplay from './ErrorDisplay'\r\n\r\nconst AssetsSelector = ({\r\n    Resize,\r\n    Settings,\r\n    Errors,\r\n    Styles,\r\n    Navigator,\r\n    CustomNavigator,\r\n}: AssetSelectorPropTypes): JSX.Element => {\r\n    const getScreen = () => Dimensions.get('screen')\r\n\r\n    const { width, height } = useMemo(() => getScreen(), [])\r\n\r\n    const COLUMNS =\r\n        height >= width ? Settings.portraitCols : Settings.landscapeCols\r\n\r\n    const [selectedItems, setSelectedItems] = useState<string[]>([])\r\n\r\n    const [permissions, setPermissions] = useState({\r\n        hasMediaLibraryPermission: false,\r\n    })\r\n\r\n    const [availableOptions, setAvailableOptions] = useState<PagedInfo>({\r\n        first: 100,\r\n        totalCount: 0,\r\n        after: '',\r\n        endCursor: '',\r\n        hasNextPage: true,\r\n    })\r\n\r\n    const [assetItems, setItems] = useState<Asset[]>([])\r\n\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    const [error, setError] = useState<{\r\n        hasError: boolean\r\n        errorType: IAssetSelectorError\r\n    }>({\r\n        hasError: false,\r\n        errorType: 'hasErrorWithPermissions',\r\n    })\r\n\r\n    const loadAssets = useCallback(\r\n        async (params: AssetsOptions) => {\r\n            getAssetsAsync(params)\r\n                .then(({ endCursor, assets, hasNextPage }) => {\r\n                    if (assets.length <= 0) {\r\n                        setLoading(false)\r\n                        return setError({\r\n                            hasError: true,\r\n                            errorType: 'hasNoAssets',\r\n                        })\r\n                    }\r\n                    if (availableOptions.after === endCursor) return\r\n                    setAvailableOptions({\r\n                        ...availableOptions,\r\n                        after: endCursor,\r\n                        hasNextPage: hasNextPage,\r\n                    })\r\n                    setLoading(false)\r\n                    return setItems([...assetItems, ...assets])\r\n                })\r\n                .catch(() => {\r\n                    setLoading(false)\r\n                    setError({\r\n                        hasError: true,\r\n                        errorType: 'hasErrorWithLoading',\r\n                    })\r\n                })\r\n        },\r\n        [assetItems]\r\n    )\r\n\r\n    const getMediaLibraryPermission = useCallback(async () => {\r\n        try {\r\n            const {\r\n                status: MEDIA_LIBRARY,\r\n            }: MediaLibrary.PermissionResponse = await MediaLibrary.requestPermissionsAsync()\r\n            if (MEDIA_LIBRARY !== 'granted') {\r\n                setLoading(false)\r\n                setError({\r\n                    hasError: true,\r\n                    errorType: 'hasErrorWithPermissions',\r\n                })\r\n            }\r\n            setPermissions({\r\n                hasMediaLibraryPermission: MEDIA_LIBRARY === 'granted',\r\n            })\r\n        } catch (err) {\r\n            setError({\r\n                hasError: true,\r\n                errorType: 'hasErrorWithPermissions',\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const onClickUseCallBack = useCallback((id: string) => {\r\n        setSelectedItems((selectedItems) => {\r\n            const alreadySelected = selectedItems.indexOf(id) >= 0\r\n            if (\r\n                selectedItems.length >= Settings.maxSelection &&\r\n                !alreadySelected\r\n            )\r\n                return selectedItems\r\n            if (alreadySelected)\r\n                return selectedItems.filter((item) => item !== id)\r\n            else return [...selectedItems, id]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Errors.onError?.()\r\n        getAssets()\r\n    }, [Settings.assetsType, permissions.hasMediaLibraryPermission])\r\n\r\n    const getAssets = () => {\r\n        try {\r\n            if (availableOptions.hasNextPage) {\r\n                const params: AssetsOptions = {\r\n                    first: 100,\r\n                    mediaType: Settings.assetsType,\r\n                    sortBy: ['creationTime'],\r\n                }\r\n                if (availableOptions.after)\r\n                    params.after = availableOptions.after\r\n                if (!availableOptions.hasNextPage) return\r\n\r\n                return permissions.hasMediaLibraryPermission\r\n                    ? loadAssets(params)\r\n                    : getMediaLibraryPermission()\r\n            } \r\n        } catch (err) {\r\n            setError({\r\n                hasError: true,\r\n                errorType: 'hasErrorWithLoading',\r\n            })\r\n        }\r\n        return; // only added because of `noImplicitReturns` ugly rule.\r\n    }\r\n\r\n    const resizeImages = async (image: Asset, manipulate: ResizeType) => {\r\n        try {\r\n            const { base64, width, height, saveTo, compress } = manipulate\r\n            const saveFormat = saveTo\r\n                ? saveTo === 'jpeg'\r\n                    ? ImageManipulator.SaveFormat.JPEG\r\n                    : ImageManipulator.SaveFormat.PNG\r\n                : ImageManipulator.SaveFormat.JPEG\r\n\r\n            let sizeOptions: {\r\n                width?: number\r\n                height?: number\r\n            } = {\r\n                width,\r\n                height,\r\n            }\r\n\r\n            if (!width && !height) {\r\n                sizeOptions.width = image.width\r\n                sizeOptions.height = image.height\r\n            }\r\n            const options = [\r\n                {\r\n                    resize: JSON.parse(JSON.stringify(sizeOptions)),\r\n                },\r\n            ]\r\n            const format = {\r\n                base64,\r\n                compress,\r\n                format: saveFormat,\r\n            }\r\n            return await ImageManipulator.manipulateAsync(\r\n                image.uri,\r\n                options,\r\n                format\r\n            )\r\n        } catch (err) {\r\n            setError({\r\n                hasError: true,\r\n                errorType: 'hasErrorWithResizing',\r\n            })\r\n            return image\r\n        }\r\n    }\r\n\r\n    const prepareResponse = useCallback(\r\n        () =>\r\n            assetItems\r\n                .filter(\r\n                    (asset: { id: any }) =>\r\n                        selectedItems.indexOf(asset.id) !== -1\r\n                )\r\n                .sort(\r\n                    (a, b) =>\r\n                        selectedItems.indexOf(a.id) -\r\n                        selectedItems.indexOf(b.id)\r\n                ),\r\n        [selectedItems]\r\n    )\r\n\r\n    const manipulateResults = async (source: string) => {\r\n        setLoading(true)\r\n        const selectedAssets = prepareResponse()\r\n        try {\r\n            const selectedItemsMetaData: any[] = []\r\n            if (Settings.getImageMetaData && !Resize) {\r\n                await asyncForEach(selectedAssets, async (asset: Asset) => {\r\n                    const metaAsset = await getAssetInfoAsync(asset)\r\n                    selectedItemsMetaData.push(metaAsset)\r\n                })\r\n                return responseWithResults(source, selectedItemsMetaData)\r\n            }\r\n            if (Resize) {\r\n                let modAssets: (ImageManipulator.ImageResult &\r\n                    Pick<MediaLibrary.Asset, 'mediaType'>)[] = []\r\n                await asyncForEach(selectedAssets, async (asset: Asset) => {\r\n                    if (asset.mediaType === 'photo') {\r\n                        const resizedImage = await resizeImages(asset, Resize)\r\n                        modAssets.push({\r\n                            ...resizedImage,\r\n                            mediaType: asset.mediaType,\r\n                        })\r\n                    } else modAssets.push(asset)\r\n                })\r\n                return responseWithResults(source, modAssets)\r\n            }\r\n            return responseWithResults(source, selectedAssets)\r\n        } catch (err) {\r\n            setError({\r\n                hasError: true,\r\n                errorType: 'hasErrorWithResizing',\r\n            })\r\n            return responseWithResults(source, selectedAssets)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const responseWithResults = (\r\n        navigation: string,\r\n        assets: Asset[] | ImageResult[]\r\n    ) => {\r\n        const _default = navigation === 'default'\r\n        return _default\r\n            ? Navigator?.onSuccess(assets)\r\n            : CustomNavigator?.props.onSuccess(assets)\r\n    }\r\n    return (\r\n        <Screen bgColor={Styles.bgColor} style={Styles.screenStyle}>\r\n            {CustomNavigator?.Component && (\r\n                <CustomNavigator.Component\r\n                    {...CustomNavigator.props}\r\n                    selected={selectedItems.length}\r\n                    onSuccess={() => manipulateResults('custom')}\r\n                />\r\n            )}\r\n            {Navigator && (\r\n                <DefaultTopNavigator\r\n                    Texts={Navigator.Texts}\r\n                    selected={selectedItems.length}\r\n                    onBack={() => Navigator.onBack()}\r\n                    midTextColor={Navigator.midTextColor || 'black'}\r\n                    onSuccess={() => manipulateResults('default')}\r\n                    minSelection={Navigator.minSelection}\r\n                    buttonTextStyle={Navigator.buttonTextStyle}\r\n                    buttonStyle={Navigator.buttonStyle}\r\n                />\r\n            )}\r\n\r\n            {isLoading ? (\r\n                <Spinner color={Styles.spinnerColor} />\r\n            ) : error.hasError ? (\r\n                <HasError bgColor={Styles.bgColor}>\r\n                    <ErrorDisplay\r\n                        errorType={error.errorType}\r\n                        errorTextColor={Errors.errorTextColor}\r\n                        errorMessages={Errors.errorMessages}\r\n                    />\r\n                </HasError>\r\n            ) : (\r\n                <Widget\r\n                    widgetWidth={Styles.widgetWidth}\r\n                    bgColor={Styles.bgColor}\r\n                    style={Styles.widgetStyle}\r\n                >\r\n                    <AssetList\r\n                        cols={COLUMNS}\r\n                        margin={Styles.margin}\r\n                        data={assetItems}\r\n                        getMoreAssets={getAssets}\r\n                        onClick={onClickUseCallBack}\r\n                        selectedItems={selectedItems}\r\n                        screen={(width * Styles.widgetWidth) / 100}\r\n                        selectedIcon={Styles.selectedIcon}\r\n                        videoIcon={Styles.videoIcon}\r\n                    />\r\n                </Widget>\r\n            )}\r\n        </Screen>\r\n    )\r\n}\r\n\r\nasync function asyncForEach(array: Asset[], callback: any) {\r\n    for (let index = 0; index < array.length; index++) {\r\n        await callback(array[index], index, array)\r\n    }\r\n}\r\n\r\nconst SpinnerStyle = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n    horizontal: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        padding: 10,\r\n    },\r\n})\r\n\r\nconst Spinner: FC<{ color: string }> = ({ color }) => {\r\n    return (\r\n        <View style={[SpinnerStyle.container, SpinnerStyle.horizontal]}>\r\n            <ActivityIndicator size=\"large\" color={color} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst HasError = styled.View<IScreen>`\r\n    background-color: ${({ bgColor }) => bgColor};\r\n    flex: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Screen = styled.View<IScreen>`\r\n    background-color: ${({ bgColor }) => bgColor};\r\n    flex: 1;\r\n`\r\n\r\nconst Widget = styled.View<IWidget>`\r\n    margin: 0 auto;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: ${({ bgColor }) => bgColor};\r\n    width: ${({ widgetWidth }) => widgetWidth || 100}%;\r\n    flex: 1;\r\n`\r\n\r\nexport default AssetsSelector\r\n"]},"metadata":{},"sourceType":"module"}