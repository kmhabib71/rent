{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styled from 'styled-components/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Navigator = function Navigator(_ref) {\n  var Texts = _ref.Texts,\n      selected = _ref.selected,\n      onBack = _ref.onBack,\n      midTextColor = _ref.midTextColor,\n      onSuccess = _ref.onSuccess,\n      minSelection = _ref.minSelection,\n      buttonTextStyle = _ref.buttonTextStyle,\n      buttonStyle = _ref.buttonStyle;\n\n  var handleActionRequest = function handleActionRequest() {\n    if (!minSelection) return onSuccess();\n\n    if (selected) {\n      return selected >= minSelection && onSuccess();\n    }\n  };\n\n  return _jsxs(Container, {\n    children: [_jsx(SimpleButton, {\n      style: buttonStyle,\n      onPress: onBack,\n      children: _jsx(Text, {\n        style: buttonTextStyle,\n        children: Texts.back\n      })\n    }), _jsxs(Text, {\n      style: {\n        color: midTextColor\n      },\n      children: [selected, \" \", Texts.selected]\n    }), _jsx(SimpleButton, {\n      style: buttonStyle,\n      onPress: handleActionRequest,\n      children: _jsx(Text, {\n        style: buttonTextStyle,\n        children: Texts.finish\n      })\n    })]\n  });\n};\n\nexport default Navigator;\nvar SimpleButton = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    justify-content: center;\\n    align-items: center;\\n    width: 100px;\\n    height: 38px;\\n\"])));\nvar Container = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    width: 98%;\\n    margin: 0 auto;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: space-between;\\n    height: 45px;\\n    padding: 5px;\\n\"])));","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/node_modules/expo-images-picker/src/Navigator.tsx"],"names":["React","styled","Navigator","Texts","selected","onBack","midTextColor","onSuccess","minSelection","buttonTextStyle","buttonStyle","handleActionRequest","back","color","finish","SimpleButton","TouchableOpacity","Container","View"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OASG;AAAA,MARjBC,KAQiB,QARjBA,KAQiB;AAAA,MAPjBC,QAOiB,QAPjBA,QAOiB;AAAA,MANjBC,MAMiB,QANjBA,MAMiB;AAAA,MALjBC,YAKiB,QALjBA,YAKiB;AAAA,MAJjBC,SAIiB,QAJjBA,SAIiB;AAAA,MAHjBC,YAGiB,QAHjBA,YAGiB;AAAA,MAFjBC,eAEiB,QAFjBA,eAEiB;AAAA,MADjBC,WACiB,QADjBA,WACiB;;AACjB,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAI,CAACH,YAAL,EAAmB,OAAOD,SAAS,EAAhB;;AACnB,QAAIH,QAAJ,EAAc;AACV,aAAOA,QAAQ,IAAII,YAAZ,IAA4BD,SAAS,EAA5C;AACH;AACJ,GALD;;AAMA,SACI,MAAC,SAAD;AAAA,eACI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAEG,WAArB;AAAkC,MAAA,OAAO,EAAEL,MAA3C;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,eAAb;AAAA,kBAA+BN,KAAK,CAACS;AAArC;AADJ,MADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEP;AAAT,OAAb;AAAA,iBACKF,QADL,OACgBD,KAAK,CAACC,QADtB;AAAA,MALJ,EASI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAEM,WAArB;AAAkC,MAAA,OAAO,EAAEC,mBAA3C;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,eAAb;AAAA,kBAA+BN,KAAK,CAACW;AAArC;AADJ,MATJ;AAAA,IADJ;AAeH,CA/BD;;AAiCA,eAAeZ,SAAf;AAEA,IAAMa,YAAY,GAAGd,MAAM,CAACe,gBAAV,0KAAlB;AAOA,IAAMC,SAAS,GAAGhB,MAAM,CAACiB,IAAV,mPAAf","sourcesContent":["import React from 'react'\nimport { Text } from 'react-native'\nimport styled from 'styled-components/native'\nimport { NavigatorType } from './Types'\n\nconst Navigator = ({\n    Texts,\n    selected,\n    onBack,\n    midTextColor,\n    onSuccess,\n    minSelection,\n    buttonTextStyle,\n    buttonStyle,\n}: NavigatorType) => {\n    const handleActionRequest = () => {\n        if (!minSelection) return onSuccess()\n        if (selected) {\n            return selected >= minSelection && onSuccess()\n        }\n    }\n    return (\n        <Container>\n            <SimpleButton style={buttonStyle} onPress={onBack}>\n                <Text style={buttonTextStyle}>{Texts.back}</Text>\n            </SimpleButton>\n\n            <Text style={{ color: midTextColor }}>\n                {selected} {Texts.selected}\n            </Text>\n\n            <SimpleButton style={buttonStyle} onPress={handleActionRequest}>\n                <Text style={buttonTextStyle}>{Texts.finish}</Text>\n            </SimpleButton>\n        </Container>\n    )\n}\n\nexport default Navigator\n\nconst SimpleButton = styled.TouchableOpacity`\n    justify-content: center;\n    align-items: center;\n    width: 100px;\n    height: 38px;\n`\n\nconst Container = styled.View`\n    width: 98%;\n    margin: 0 auto;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    height: 45px;\n    padding: 5px;\n`\n"]},"metadata":{},"sourceType":"module"}