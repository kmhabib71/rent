{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ErrorDisplay = function ErrorDisplay(_ref) {\n  var errorType = _ref.errorType,\n      errorMessages = _ref.errorMessages,\n      errorTextColor = _ref.errorTextColor;\n  if (!errorType) return _jsx(Container, {});\n  return _jsxs(Container, {\n    children: [errorType === 'hasNoAssets' && _jsx(PermissionsError, {\n      children: _jsx(Text, {\n        color: errorTextColor || 'black',\n        children: (errorMessages == null ? void 0 : errorMessages.hasNoAssets) || 'There are no assets to display.'\n      })\n    }), errorType === 'hasErrorWithPermissions' && _jsx(PermissionsError, {\n      children: _jsx(Text, {\n        color: errorTextColor || 'black',\n        children: (errorMessages == null ? void 0 : errorMessages.hasErrorWithPermissions) || 'Please Allow media permissions and try again.'\n      })\n    }), errorType === 'hasErrorWithLoading' && _jsx(LoadingAssetsError, {\n      children: _jsx(Text, {\n        color: errorTextColor || 'black',\n        children: (errorMessages == null ? void 0 : errorMessages.hasErrorWithLoading) || 'There was error loading assets.'\n      })\n    }), errorType === 'hasErrorWithResizing' && _jsx(ResizeImagesError, {\n      children: _jsx(Text, {\n        color: errorTextColor || 'black',\n        children: (errorMessages == null ? void 0 : errorMessages.hasErrorWithResizing) || 'There was error loading assets.'\n      })\n    })]\n  });\n};\n\nvar Text = styled.Text(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    color: \", \";\\n\"])), function (_ref2) {\n  var color = _ref2.color;\n  return color || 'black';\n});\nvar PermissionsError = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    width: 90%;\\n\"])));\nvar LoadingAssetsError = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\"])));\nvar ResizeImagesError = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\"])));\nvar Container = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nexport default ErrorDisplay;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/node_modules/expo-images-picker/src/ErrorDisplay.tsx"],"names":["React","styled","ErrorDisplay","errorType","errorMessages","errorTextColor","hasNoAssets","hasErrorWithPermissions","hasErrorWithLoading","hasErrorWithResizing","Text","color","PermissionsError","View","LoadingAssetsError","ResizeImagesError","Container"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAIH;AAAA,MAHdC,SAGc,QAHdA,SAGc;AAAA,MAFdC,aAEc,QAFdA,aAEc;AAAA,MADdC,cACc,QADdA,cACc;AACd,MAAI,CAACF,SAAL,EAAgB,OAAO,KAAC,SAAD,KAAP;AAChB,SACI,MAAC,SAAD;AAAA,eACKA,SAAS,KAAK,aAAd,IACG,KAAC,gBAAD;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,cAAc,IAAI,OAA/B;AAAA,kBACK,CAAAD,aAAa,QAAb,YAAAA,aAAa,CAAEE,WAAf,KACG;AAFR;AADJ,MAFR,EAUKH,SAAS,KAAK,yBAAd,IACG,KAAC,gBAAD;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,cAAc,IAAI,OAA/B;AAAA,kBACK,CAAAD,aAAa,QAAb,YAAAA,aAAa,CAAEG,uBAAf,KACG;AAFR;AADJ,MAXR,EAkBKJ,SAAS,KAAK,qBAAd,IACG,KAAC,kBAAD;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,cAAc,IAAI,OAA/B;AAAA,kBACK,CAAAD,aAAa,QAAb,YAAAA,aAAa,CAAEI,mBAAf,KACG;AAFR;AADJ,MAnBR,EA0BKL,SAAS,KAAK,sBAAd,IACG,KAAC,iBAAD;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,cAAc,IAAI,OAA/B;AAAA,kBACK,CAAAD,aAAa,QAAb,YAAAA,aAAa,CAAEK,oBAAf,KACG;AAFR;AADJ,MA3BR;AAAA,IADJ;AAqCH,CA3CD;;AA6CA,IAAMC,IAAI,GAAGT,MAAM,CAACS,IAAV,+FACG;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,IAAI,OAAxB;AAAA,CADH,CAAV;AAGA,IAAMC,gBAAgB,GAAGX,MAAM,CAACY,IAAV,+FAAtB;AAGA,IAAMC,kBAAkB,GAAGb,MAAM,CAACY,IAAV,4EAAxB;AACA,IAAME,iBAAiB,GAAGd,MAAM,CAACY,IAAV,4EAAvB;AACA,IAAMG,SAAS,GAAGf,MAAM,CAACY,IAAV,sIAAf;AAKA,eAAeX,YAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components/native'\nimport { ErrorTypes } from './Types'\n\nconst ErrorDisplay = ({\n    errorType,\n    errorMessages,\n    errorTextColor,\n}: ErrorTypes) => {\n    if (!errorType) return <Container />\n    return (\n        <Container>\n            {errorType === 'hasNoAssets' && (\n                <PermissionsError>\n                    <Text color={errorTextColor || 'black'}>\n                        {errorMessages?.hasNoAssets ||\n                            'There are no assets to display.'}\n                    </Text>\n                </PermissionsError>\n            )}\n\n            {errorType === 'hasErrorWithPermissions' && (\n                <PermissionsError>\n                    <Text color={errorTextColor || 'black'}>\n                        {errorMessages?.hasErrorWithPermissions ||\n                            'Please Allow media permissions and try again.'}\n                    </Text>\n                </PermissionsError>\n            )}\n            {errorType === 'hasErrorWithLoading' && (\n                <LoadingAssetsError>\n                    <Text color={errorTextColor || 'black'}>\n                        {errorMessages?.hasErrorWithLoading ||\n                            'There was error loading assets.'}\n                    </Text>\n                </LoadingAssetsError>\n            )}\n            {errorType === 'hasErrorWithResizing' && (\n                <ResizeImagesError>\n                    <Text color={errorTextColor || 'black'}>\n                        {errorMessages?.hasErrorWithResizing ||\n                            'There was error loading assets.'}\n                    </Text>\n                </ResizeImagesError>\n            )}\n        </Container>\n    )\n}\n\nconst Text = styled.Text<{ color: string }>`\n    color: ${({ color }) => color || 'black'};\n`\nconst PermissionsError = styled.View`\n    width: 90%;\n`\nconst LoadingAssetsError = styled.View``\nconst ResizeImagesError = styled.View``\nconst Container = styled.View`\n    justify-content: center;\n    align-items: center;\n`\n\nexport default ErrorDisplay\n"]},"metadata":{},"sourceType":"module"}