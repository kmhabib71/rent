{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar HeaderForDesktop = function HeaderForDesktop() {\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: [styles.headerWrap, {\n        display: windowWidth > 800 ? \"flex\" : \"none\"\n      }],\n      children: [_jsxs(View, {\n        style: styles.searchByTextWrap,\n        children: [_jsx(Feather, {\n          name: \"search\",\n          size: 24,\n          color: \"black\"\n        }), _jsx(TextInput, {\n          placeholder: \"Search in Rent.com\",\n          style: styles.searchPlaceholder,\n          multiline: false\n        })]\n      }), _jsxs(View, {\n        style: styles.locationCatSearchWrap,\n        children: [_jsxs(View, {\n          style: styles.locationSearchWrap,\n          children: [_jsx(MaterialIcons, {\n            name: \"location-on\",\n            size: 24,\n            color: \"black\"\n          }), _jsx(Text, {\n            children: \"Location\"\n          }), _jsx(Text, {\n            style: styles.locationSearchText,\n            children: \"New York\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Octicons, {\n            name: \"settings\",\n            size: 24,\n            color: \"black\"\n          }), _jsx(Text, {\n            style: styles.catText,\n            children: \"Category\"\n          }), _jsx(Text, {\n            style: styles.catDynText,\n            children: \"Vehicle\"\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default HeaderForDesktop;","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/components/headerForDesktop/index.js"],"names":["StatusBar","Feather","MaterialIcons","Octicons","HeaderForDesktop","windowWidth","Number","Dimensions","get","width","styles","headerWrap","display","searchByTextWrap","searchPlaceholder","locationCatSearchWrap","locationSearchWrap","locationSearchText","flexDirection","catText","catDynText"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAGA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA1B,CAA1B;AACA,SACE;AAAA,cACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACC,UADF,EAEL;AAAEC,QAAAA,OAAO,EAAEP,WAAW,GAAG,GAAd,GAAoB,MAApB,GAA6B;AAAxC,OAFK,CADT;AAAA,iBAKE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACG,gBAApB;AAAA,mBACE,KAAC,OAAD;AAAS,UAAA,IAAI,EAAC,QAAd;AAAuB,UAAA,IAAI,EAAE,EAA7B;AAAiC,UAAA,KAAK,EAAC;AAAvC,UADF,EAEE,KAAC,SAAD;AACE,UAAA,WAAW,EAAC,oBADd;AAEE,UAAA,KAAK,EAAEH,MAAM,CAACI,iBAFhB;AAGE,UAAA,SAAS,EAAE;AAHb,UAFF;AAAA,QALF,EAaE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,qBAApB;AAAA,mBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,kBAApB;AAAA,qBACE,KAAC,aAAD;AAAe,YAAA,IAAI,EAAC,aAApB;AAAkC,YAAA,IAAI,EAAE,EAAxC;AAA4C,YAAA,KAAK,EAAC;AAAlD,YADF,EAEE,KAAC,IAAD;AAAA;AAAA,YAFF,EAGE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEN,MAAM,CAACO,kBAApB;AAAA;AAAA,YAHF;AAAA,UADF,EAME,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,aAAa,EAAE;AAAjB,WAAb;AAAA,qBACE,KAAC,QAAD;AAAU,YAAA,IAAI,EAAC,UAAf;AAA0B,YAAA,IAAI,EAAE,EAAhC;AAAoC,YAAA,KAAK,EAAC;AAA1C,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAER,MAAM,CAACS,OAApB;AAAA;AAAA,YAFF,EAGE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA,YAHF;AAAA,UANF;AAAA,QAbF;AAAA;AADF,IADF;AA8BD,CAhCD;;AAiCA,eAAehB,gBAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { Text, View, TextInput, Dimensions } from \"react-native\";\n\nimport { Feather } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Octicons } from \"@expo/vector-icons\";\nconst HeaderForDesktop = () => {\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  return (\n    <>\n      <View\n        style={[\n          styles.headerWrap,\n          { display: windowWidth > 800 ? \"flex\" : \"none\" },\n        ]}>\n        <View style={styles.searchByTextWrap}>\n          <Feather name=\"search\" size={24} color=\"black\" />\n          <TextInput\n            placeholder=\"Search in Rent.com\"\n            style={styles.searchPlaceholder}\n            multiline={false}\n          />\n        </View>\n        <View style={styles.locationCatSearchWrap}>\n          <View style={styles.locationSearchWrap}>\n            <MaterialIcons name=\"location-on\" size={24} color=\"black\" />\n            <Text>Location</Text>\n            <Text style={styles.locationSearchText}>New York</Text>\n          </View>\n          <View style={{ flexDirection: \"row\" }}>\n            <Octicons name=\"settings\" size={24} color=\"black\" />\n            <Text style={styles.catText}>Category</Text>\n            <Text style={styles.catDynText}>Vehicle</Text>\n          </View>\n        </View>\n      </View>\n    </>\n  );\n};\nexport default HeaderForDesktop;\n"]},"metadata":{},"sourceType":"module"}