{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles from \"./styles\";\nimport { withAuthenticator } from \"aws-amplify-react-native\";\nimport { Auth, Storage, API, graphqlOperation } from \"aws-amplify\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { colors } from \"../../modal/color\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useRoute } from \"@react-navigation/native\";\nimport \"react-native-get-random-values\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createListing } from \"../../graphql/mutations\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Listing = function Listing() {\n  var windowWidth = Number(Dimensions.get(\"window\").width);\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageData = _useState2[0],\n      setImageData = _useState2[1];\n\n  var _useState3 = useState({\n    catID: 0,\n    catName: \"Category\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState({\n    locID: 0,\n    locName: \"Location\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rentValue = _useState12[0],\n      setRentValue = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userID = _useState14[0],\n      setUserID = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userEmail = _useState16[0],\n      setUserEmail = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      postSuccess = _useState18[0],\n      setPostSuccess = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      postProcessing = _useState20[0],\n      setPostProcessing = _useState20[1];\n\n  useEffect(function () {\n    if (postSuccess !== \"\") {\n      setPostProcessing(false);\n      Alert.alert(\"Success\", postSuccess, [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Home\", {\n            screen: \"Explore\"\n          });\n        }\n      }]);\n    }\n  }, [postSuccess]);\n  Auth.currentAuthenticatedUser().then(function (user) {\n    console.log(\"user id is: \", user.attributes.sub);\n    setUserID(user.attributes.sub);\n    setUserEmail(user.attributes.email);\n  }).catch(function (err) {\n    console.log(err);\n    throw err;\n  });\n  var route = useRoute();\n  useEffect(function () {\n    if (!route.params) {\n      console.log(\"There is no data in route\");\n    } else {\n      if (route.params.imageData !== undefined) {\n        setImageData(route.params.imageData);\n      } else if (route.params.catID !== undefined) {\n        setCategory(route.params);\n      } else if (route.params.locID !== undefined) {\n        setLocation(route.params);\n      }\n    }\n  });\n  var imageAllUrl = [];\n\n  var storeToDB = function storeToDB() {\n    return _regeneratorRuntime.async(function storeToDB$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setPostProcessing(true);\n            imageData && imageData.map(function _callee(compnent, index) {\n              var imageUrl, response, blob, urlParts, extension, key, postData;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      imageUrl = compnent.uri;\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(fetch(imageUrl));\n\n                    case 3:\n                      response = _context.sent;\n                      _context.next = 6;\n                      return _regeneratorRuntime.awrap(response.blob());\n\n                    case 6:\n                      blob = _context.sent;\n                      urlParts = imageUrl.split(\".\");\n                      extension = urlParts[urlParts.length - 1];\n                      key = uuidv4() + \".\" + extension;\n                      imageAllUrl.push({\n                        imageUri: key\n                      });\n                      _context.next = 13;\n                      return _regeneratorRuntime.awrap(Storage.put(key, blob));\n\n                    case 13:\n                      if (!(imageData.length == index + 1)) {\n                        _context.next = 19;\n                        break;\n                      }\n\n                      postData = {\n                        title: title,\n                        categoryName: category.catName,\n                        categoryID: category.catID,\n                        description: description,\n                        images: JSON.stringify(imageAllUrl),\n                        locationID: Location.locID,\n                        locationName: Location.locName,\n                        owner: userEmail,\n                        rentValue: rentValue,\n                        userID: userID,\n                        commonID: \"1\"\n                      };\n                      _context.next = 17;\n                      return _regeneratorRuntime.awrap(API.graphql({\n                        query: createListing,\n                        variables: {\n                          input: postData\n                        },\n                        authMode: \"AMAZON_COGNITO_USER_POOLS\"\n                      }));\n\n                    case 17:\n                      setPostProcessing(false);\n                      setPostSuccess(\"Your adv have successfully published.\");\n\n                    case 19:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      menuToggle = _useState22[0],\n      setMenuToggle = _useState22[1];\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    children: [_jsx(HeaderForDesktop, {\n      setMenuToggle: setMenuToggle,\n      menuToggle: menuToggle\n    }), _jsxs(ScrollView, {\n      style: {\n        margin: 10,\n        width: windowWidth > 800 ? \"80%\" : \"100%\",\n        padding: 50\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: 10\n          },\n          children: \"Upload images [Max 5 photos]\"\n        }), _jsx(Pressable, {\n          style: {\n            backgroundColor: colors.white,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginVertical: 20,\n            height: 150,\n            width: 150,\n            borderWidth: 1,\n            borderStyle: \"dashed\",\n            borderRadius: 30\n          },\n          onPress: function onPress() {\n            navigation.navigate(\"SelectPhoto\");\n          },\n          children: _jsx(AntDesign, {\n            name: \"pluscircle\",\n            size: 24,\n            color: \"black\"\n          })\n        }), _jsx(View, {\n          children: _jsx(ScrollView, {\n            horizontal: true,\n            children: imageData && imageData.map(function (component, index) {\n              return _jsx(Image, {\n                source: {\n                  uri: component.uri\n                },\n                style: {\n                  height: 100,\n                  width: 100,\n                  marginBottom: 20,\n                  marginTop: -5,\n                  marginRight: 5\n                }\n              }, component.id);\n            })\n          })\n        })]\n      }), _jsxs(Pressable, {\n        style: styles.catStyle,\n        onPress: function onPress() {\n          navigation.navigate(\"SelectCategory\");\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(Octicons, {\n            name: \"settings\",\n            size: 24,\n            color: \"black\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: colors.secondary,\n              marginLeft: 5\n            },\n            children: category.catName\n          })]\n        }), _jsx(AntDesign, {\n          name: \"right\",\n          size: 22,\n          color: colors.secondary\n        })]\n      }), _jsxs(Pressable, {\n        onPress: function onPress() {\n          navigation.navigate(\"SelectLocation\");\n        },\n        style: styles.catStyle,\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"map-marker\",\n            size: 24,\n            color: colors.secondary\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: colors.secondary,\n              marginLeft: 5\n            },\n            children: Location.locName\n          })]\n        }), _jsx(AntDesign, {\n          name: \"right\",\n          size: 22,\n          color: colors.secondary\n        })]\n      }), _jsxs(View, {\n        style: styles.inputTextStyle,\n        children: [_jsx(MaterialIcons, {\n          name: \"title\",\n          size: 24,\n          color: colors.secondary\n        }), _jsx(TextInput, {\n          placeholder: \"Adv Title\",\n          style: {\n            width: \"100%\"\n          },\n          onChangeText: function onChangeText(text) {\n            return setTitle(text);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputTextStyle,\n        children: [_jsx(MaterialIcons, {\n          name: \"description\",\n          size: 24,\n          color: colors.secondary\n        }), _jsx(TextInput, {\n          placeholder: \"Write a description\",\n          style: {\n            marginLeft: 5,\n            width: \"100%\"\n          },\n          onChangeText: function onChangeText(text) {\n            return setDescription(text);\n          },\n          multiline: true,\n          numberOfLines: 3\n        })]\n      }), _jsxs(View, {\n        style: [styles.inputTextStyle, {\n          width: \"50%\"\n        }],\n        children: [_jsx(FontAwesome, {\n          name: \"dollar\",\n          size: 24,\n          color: colors.secondary\n        }), _jsx(TextInput, {\n          placeholder: \"Add a value\",\n          style: {\n            marginLeft: 5,\n            width: \"100%\"\n          },\n          onChangeText: function onChangeText(text) {\n            return setRentValue(text);\n          },\n          keyboardType: \"numeric\"\n        })]\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return storeToDB();\n        },\n        android_ripple: {\n          color: \"grey\"\n        },\n        style: {\n          margin: 10,\n          borderRadius: 30,\n          backgroundColor: colors.secondary,\n          alignItems: \"center\",\n          paddingLeft: 20,\n          elevation: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            color: colors.white,\n            paddingVertical: 12,\n            fontSize: 14.5,\n            fontWeight: \"bold\"\n          },\n          children: postProcessing ? \"Processing...\" : \"POST ADV\"\n        })\n      })]\n    }), _jsx(MenuDetailsForDesktop, {\n      menuToggle: menuToggle,\n      top: 59,\n      right: \"9.3%\"\n    })]\n  });\n};\n\nexport default withAuthenticator(Listing);","map":{"version":3,"sources":["C:/Users/Km Habib/Documents/GitHub/Rent_Project/rent/src/screens/Listing/index.js"],"names":["React","useState","useEffect","styles","withAuthenticator","Auth","Storage","API","graphqlOperation","AntDesign","colors","Octicons","MaterialCommunityIcons","MaterialIcons","FontAwesome","useNavigation","useRoute","v4","uuidv4","createListing","HeaderForDesktop","MenuDetailsForDesktop","Listing","windowWidth","Number","Dimensions","get","width","navigation","imageData","setImageData","catID","catName","category","setCategory","locID","locName","Location","setLocation","title","setTitle","description","setDescription","rentValue","setRentValue","userID","setUserID","userEmail","setUserEmail","postSuccess","setPostSuccess","postProcessing","setPostProcessing","Alert","alert","text","onPress","navigate","screen","currentAuthenticatedUser","then","user","console","log","attributes","sub","email","catch","err","route","params","undefined","imageAllUrl","storeToDB","map","compnent","index","imageUrl","uri","fetch","response","blob","urlParts","split","extension","length","key","push","imageUri","put","postData","categoryName","categoryID","images","JSON","stringify","locationID","locationName","owner","commonID","graphql","query","variables","input","authMode","menuToggle","setMenuToggle","flex","alignItems","margin","padding","marginTop","backgroundColor","white","display","justifyContent","marginVertical","height","borderWidth","borderStyle","borderRadius","component","marginBottom","marginRight","id","catStyle","flexDirection","fontSize","color","secondary","marginLeft","inputTextStyle","paddingLeft","elevation","paddingVertical","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Image,\n  ScrollView,\n  Alert,\n  Dimensions,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport { withAuthenticator } from \"aws-amplify-react-native\";\nimport { Auth, Storage, API, graphqlOperation } from \"aws-amplify\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { colors } from \"../../modal/color\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useRoute } from \"@react-navigation/native\";\nimport \"react-native-get-random-values\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createListing } from \"../../graphql/mutations\";\nimport HeaderForDesktop from \"../../components/headerForDesktop\";\nimport MenuDetailsForDesktop from \"../../components/menuDetailsForDesktop\";\nconst Listing = () => {\n  const windowWidth = Number(Dimensions.get(\"window\").width);\n  const navigation = useNavigation();\n  const [imageData, setImageData] = useState([]);\n  const [category, setCategory] = useState({ catID: 0, catName: \"Category\" });\n  const [Location, setLocation] = useState({ locID: 0, locName: \"Location\" });\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [rentValue, setRentValue] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [postSuccess, setPostSuccess] = useState(\"\");\n  const [postProcessing, setPostProcessing] = useState(false);\n\n  useEffect(() => {\n    if (postSuccess !== \"\") {\n      setPostProcessing(false);\n      Alert.alert(\"Success\", postSuccess, [\n        {\n          text: \"Ok\",\n          onPress: () => navigation.navigate(\"Home\", { screen: \"Explore\" }),\n        },\n      ]);\n    }\n  }, [postSuccess]);\n  Auth.currentAuthenticatedUser()\n    .then((user) => {\n      console.log(\"user id is: \", user.attributes.sub);\n      setUserID(user.attributes.sub);\n      setUserEmail(user.attributes.email);\n    })\n    .catch((err) => {\n      console.log(err);\n      throw err;\n    });\n\n  const route = useRoute();\n  useEffect(() => {\n    if (!route.params) {\n      console.log(\"There is no data in route\");\n    } else {\n      if (route.params.imageData !== undefined) {\n        // console.log(route.params.imageData);\n        setImageData(route.params.imageData);\n      } else if (route.params.catID !== undefined) {\n        setCategory(route.params);\n      } else if (route.params.locID !== undefined) {\n        setLocation(route.params);\n      }\n    }\n  });\n\n  const imageAllUrl = [];\n  const storeToDB = async () => {\n    setPostProcessing(true);\n    imageData &&\n      imageData.map(async (compnent, index) => {\n        const imageUrl = compnent.uri;\n        const response = await fetch(imageUrl);\n        const blob = await response.blob();\n        const urlParts = imageUrl.split(\".\");\n        const extension = urlParts[urlParts.length - 1];\n        const key = `${uuidv4()}.${extension}`;\n        imageAllUrl.push({ imageUri: key });\n        await Storage.put(key, blob);\n\n        if (imageData.length == index + 1) {\n          const postData = {\n            title: title,\n            categoryName: category.catName,\n            categoryID: category.catID,\n            description: description,\n            images: JSON.stringify(imageAllUrl),\n            locationID: Location.locID,\n            locationName: Location.locName,\n            owner: userEmail,\n            rentValue: rentValue,\n            userID: userID,\n            commonID: \"1\",\n          };\n\n          await API.graphql({\n            query: createListing,\n            variables: { input: postData },\n            authMode: \"AMAZON_COGNITO_USER_POOLS\",\n          });\n\n          setPostProcessing(false);\n          setPostSuccess(\"Your adv have successfully published.\");\n        }\n      });\n  };\n  // Auth.signOut();\n  const [menuToggle, setMenuToggle] = useState(false);\n  return (\n    <View style={{ flex: 1, width: \"100%\", alignItems: \"center\" }}>\n      <HeaderForDesktop setMenuToggle={setMenuToggle} menuToggle={menuToggle} />\n      <ScrollView\n        style={{\n          margin: 10,\n          width: windowWidth > 800 ? \"80%\" : \"100%\",\n          padding: 50,\n        }}>\n        <View>\n          <Text style={{ marginTop: 10 }}>Upload images [Max 5 photos]</Text>\n          <Pressable\n            style={{\n              backgroundColor: colors.white,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginVertical: 20,\n              height: 150,\n              width: 150,\n              borderWidth: 1,\n              borderStyle: \"dashed\",\n              borderRadius: 30,\n            }}\n            onPress={() => {\n              navigation.navigate(\"SelectPhoto\");\n            }}>\n            <AntDesign name=\"pluscircle\" size={24} color=\"black\" />\n          </Pressable>\n          <View>\n            <ScrollView horizontal={true}>\n              {imageData &&\n                imageData.map((component, index) => (\n                  <Image\n                    key={component.id}\n                    source={{ uri: component.uri }}\n                    style={{\n                      height: 100,\n                      width: 100,\n                      marginBottom: 20,\n                      marginTop: -5,\n                      marginRight: 5,\n                    }}\n                  />\n                ))}\n            </ScrollView>\n          </View>\n        </View>\n        <Pressable\n          style={styles.catStyle}\n          onPress={() => {\n            navigation.navigate(\"SelectCategory\");\n          }}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Octicons name=\"settings\" size={24} color=\"black\" />\n            <Text\n              style={{ fontSize: 16, color: colors.secondary, marginLeft: 5 }}>\n              {category.catName}\n            </Text>\n          </View>\n          <AntDesign name=\"right\" size={22} color={colors.secondary} />\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigation.navigate(\"SelectLocation\");\n          }}\n          style={styles.catStyle}>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <MaterialCommunityIcons\n              name=\"map-marker\"\n              size={24}\n              color={colors.secondary}\n            />\n            <Text\n              style={{ fontSize: 16, color: colors.secondary, marginLeft: 5 }}>\n              {Location.locName}\n            </Text>\n          </View>\n          <AntDesign name=\"right\" size={22} color={colors.secondary} />\n        </Pressable>\n\n        <View style={styles.inputTextStyle}>\n          <MaterialIcons name=\"title\" size={24} color={colors.secondary} />\n          <TextInput\n            placeholder=\"Adv Title\"\n            style={{ width: \"100%\" }}\n            onChangeText={(text) => setTitle(text)}\n          />\n        </View>\n        <View style={styles.inputTextStyle}>\n          <MaterialIcons\n            name=\"description\"\n            size={24}\n            color={colors.secondary}\n          />\n          <TextInput\n            placeholder=\"Write a description\"\n            style={{ marginLeft: 5, width: \"100%\" }}\n            onChangeText={(text) => setDescription(text)}\n            multiline={true}\n            numberOfLines={3}\n          />\n        </View>\n        <View style={[styles.inputTextStyle, { width: \"50%\" }]}>\n          <FontAwesome name=\"dollar\" size={24} color={colors.secondary} />\n          <TextInput\n            placeholder=\"Add a value\"\n            style={{ marginLeft: 5, width: \"100%\" }}\n            onChangeText={(text) => setRentValue(text)}\n            keyboardType=\"numeric\"\n          />\n        </View>\n        <Pressable\n          onPress={() => storeToDB()}\n          android_ripple={{ color: \"grey\" }}\n          style={{\n            margin: 10,\n            borderRadius: 30,\n            backgroundColor: colors.secondary,\n            alignItems: \"center\",\n            paddingLeft: 20,\n            // marginTop: 150,\n            elevation: 5,\n          }}>\n          <Text\n            style={{\n              color: colors.white,\n              paddingVertical: 12,\n              fontSize: 14.5,\n              fontWeight: \"bold\",\n            }}>\n            {postProcessing ? \"Processing...\" : \"POST ADV\"}\n          </Text>\n        </Pressable>\n      </ScrollView>\n      <MenuDetailsForDesktop menuToggle={menuToggle} top={59} right={\"9.3%\"} />\n    </View>\n  );\n};\n\nexport default withAuthenticator(Listing);\n"]},"metadata":{},"sourceType":"module"}